
#ifndef __GNET_DBCLEARCONSUMABLE_HPP
#define __GNET_DBCLEARCONSUMABLE_HPP

#include "rpcdefs.h"
#include "callid.hxx"
#include "state.hxx"

#include "dbclearconsumablearg"


namespace GNET
{

class DBClearConsumable : public Rpc
{
#define	RPC_BASECLASS	Rpc
	#include "dbclearconsumable"
#undef	RPC_BASECLASS
	static void Check360User(UserInfo* user)
	{
		unsigned int rolelist = user->rolelist.GetRoleList();
		int roleid = user->logicuid;
		int logintime = 0;
		for(int i=1;i<0x10000;i<<=1,roleid++)
		{
			if((i&rolelist)==0)
				continue;
			GRoleInfo* info = RoleInfoCache::Instance().GetOnlist(roleid);
			if(!info)
				return;
			if(info->lastlogin_time>logintime)
				logintime = info->lastlogin_time;
		}
		if(logintime && Timer::GetTime()-logintime>365*24*3600)
		{
			// 超过一年不登陆的帐号，通知数据库进行必要的清理工作
			DBClearConsumable* rpc = (DBClearConsumable*) Rpc::Call(RPC_DBCLEARCONSUMABLE,DBClearConsumableArg(user->userid, logintime, 1));
			GameDBClient::GetInstance()->SendProtocol(rpc);
		}
	}


	void Server(Rpc::Data *argument, Rpc::Data *result, Manager *manager, Manager::Session::ID sid)
	{
		// DBClearConsumableArg *arg = (DBClearConsumableArg *)argument;
		// RpcRetcode *res = (RpcRetcode *)result;
	}

	void Client(Rpc::Data *argument, Rpc::Data *result, Manager *manager, Manager::Session::ID sid)
	{
		// TODO
		// DBClearConsumableArg *arg = (DBClearConsumableArg *)argument;
		// RpcRetcode *res = (RpcRetcode *)result;
	}

	void OnTimeout()
	{
		// TODO Client Only
	}

};

};
#endif
