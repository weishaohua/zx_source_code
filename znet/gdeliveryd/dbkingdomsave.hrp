
#ifndef __GNET_DBKINGDOMSAVE_HPP
#define __GNET_DBKINGDOMSAVE_HPP

#include "rpcdefs.h"
#include "callid.hxx"
#include "state.hxx"

#include "dbkingdomsavearg"
#include "dbkingdomsaveres"

namespace GNET
{

class DBKingdomSave : public Rpc
{
#define	RPC_BASECLASS	Rpc
	#include "dbkingdomsave"
#undef	RPC_BASECLASS

	void Server(Rpc::Data *argument, Rpc::Data *result, Manager *manager, Manager::Session::ID sid)
	{
		// DBKingdomSaveArg *arg = (DBKingdomSaveArg *)argument;
		// DBKingdomSaveRes *res = (DBKingdomSaveRes *)result;
	}

	void Client(Rpc::Data *argument, Rpc::Data *result, Manager *manager, Manager::Session::ID sid)
	{
		// TODO
		DBKingdomSaveArg *arg = (DBKingdomSaveArg *)argument;
		DBKingdomSaveRes *res = (DBKingdomSaveRes *)result;
		if (res->retcode)
			Log::log(LOG_ERR, "dbkingdomsave err %d, points = %d", res->retcode, arg->info.points);
	}

	void OnTimeout()
	{
		DBKingdomSaveArg *arg = (DBKingdomSaveArg *)argument;
		Log::log(LOG_ERR, "dbkingdomsave timeout, points = %d", arg->info.points);
	}

};

};
#endif
