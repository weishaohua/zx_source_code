	public:
		int roleid;
		unsigned int localsid;
		Octets data;
		enum { PROTOCOL_TYPE = PROTOCOL_C2SFUNGAMEDATASEND };
	public:
		C2SFunGamedataSend() { type = PROTOCOL_C2SFUNGAMEDATASEND; }
		C2SFunGamedataSend(void*) : Protocol(PROTOCOL_C2SFUNGAMEDATASEND) { }
		C2SFunGamedataSend (int l_roleid,unsigned int l_localsid,const Octets& l_data)
			 : roleid(l_roleid),localsid(l_localsid),data(l_data)
		{
			type = PROTOCOL_C2SFUNGAMEDATASEND;
		}

		C2SFunGamedataSend(const C2SFunGamedataSend &rhs)
			: Protocol(rhs),roleid(rhs.roleid),localsid(rhs.localsid),data(rhs.data) { }

		GNET::Protocol *Clone() const { return new C2SFunGamedataSend(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << localsid;
			os << data;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> localsid;
			os >> data;
			return os;
		}

		int PriorPolicy( ) const { return 100; }

		bool SizePolicy(size_t size) const { return size <= 128; }
