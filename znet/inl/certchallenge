		GNET::Protocol *Clone() const {  return new CertChallenge(*this); }
	public:
		enum { PROTOCOL_TYPE = RPC_CERTCHALLENGE };
		CertChallenge(Type type, Rpc::Data *argument, Rpc::Data *result)
			: RPC_BASECLASS(type, argument, result ) { }
		CertChallenge(const CertChallenge &rhs) : RPC_BASECLASS(rhs) { }
		int  PriorPolicy( ) const { return 102; }
		bool SizePolicy(size_t size) const { return size <= 8192; }
		bool TimePolicy(int timeout) const { return timeout <= 40; }
