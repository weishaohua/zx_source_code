	public:
		int roleid;
		int master_new;
		int teamid;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_CRSSVRTEAMSCHGCAPTAIN };
	public:
		CrssvrTeamsChgCaptain() { type = PROTOCOL_CRSSVRTEAMSCHGCAPTAIN; }
		CrssvrTeamsChgCaptain(void*) : Protocol(PROTOCOL_CRSSVRTEAMSCHGCAPTAIN) { }
		CrssvrTeamsChgCaptain (int l_roleid,int l_master_new,int l_teamid = -1,
			unsigned int l_localsid = 0)
			 : roleid(l_roleid),master_new(l_master_new),teamid(l_teamid)
			,localsid(l_localsid)
		{
			type = PROTOCOL_CRSSVRTEAMSCHGCAPTAIN;
		}

		CrssvrTeamsChgCaptain(const CrssvrTeamsChgCaptain &rhs)
			: Protocol(rhs),roleid(rhs.roleid),master_new(rhs.master_new),teamid(rhs.teamid)
			,localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new CrssvrTeamsChgCaptain(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << master_new;
			os << teamid;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> master_new;
			os >> teamid;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
