	public:
		int roleid;
		std::vector<int> rolelist;
		enum { PROTOCOL_TYPE = PROTOCOL_GATEGETGTROLESTATUS };
	public:
		GateGetGTRoleStatus() { type = PROTOCOL_GATEGETGTROLESTATUS; }
		GateGetGTRoleStatus(void*) : Protocol(PROTOCOL_GATEGETGTROLESTATUS) { }
		GateGetGTRoleStatus (int l_roleid,const std::vector<int>& l_rolelist)
			 : roleid(l_roleid),rolelist(l_rolelist)
		{
			type = PROTOCOL_GATEGETGTROLESTATUS;
		}

		GateGetGTRoleStatus(const GateGetGTRoleStatus &rhs)
			: Protocol(rhs),roleid(rhs.roleid),rolelist(rhs.rolelist) { }

		GNET::Protocol *Clone() const { return new GateGetGTRoleStatus(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << rolelist;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> rolelist;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 4096; }
