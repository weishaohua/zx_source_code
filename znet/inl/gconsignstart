	public:
		int roleid;
		int margin;
		unsigned int item_id;
		int item_cnt;
		int item_idx;
		int money;
		unsigned int price;
		unsigned int shelf_period;
		Octets sell_to_rolename;
		unsigned char consign_type;
		int category;
		enum { PROTOCOL_TYPE = PROTOCOL_GCONSIGNSTART };
	public:
		GConsignStart() { type = PROTOCOL_GCONSIGNSTART; }
		GConsignStart(void*) : Protocol(PROTOCOL_GCONSIGNSTART) { }
		GConsignStart (int l_roleid,int l_margin,unsigned int l_item_id,
			int l_item_cnt,int l_item_idx,int l_money,
			unsigned int l_price,unsigned int l_shelf_period,const Octets& l_sell_to_rolename = Octets(),
			unsigned char l_consign_type = 0,int l_category = 0)
			 : roleid(l_roleid),margin(l_margin),item_id(l_item_id)
			,item_cnt(l_item_cnt),item_idx(l_item_idx),money(l_money)
			,price(l_price),shelf_period(l_shelf_period),sell_to_rolename(l_sell_to_rolename)
			,consign_type(l_consign_type),category(l_category)
		{
			type = PROTOCOL_GCONSIGNSTART;
		}

		GConsignStart(const GConsignStart &rhs)
			: Protocol(rhs),roleid(rhs.roleid),margin(rhs.margin),item_id(rhs.item_id)
			,item_cnt(rhs.item_cnt),item_idx(rhs.item_idx),money(rhs.money)
			,price(rhs.price),shelf_period(rhs.shelf_period),sell_to_rolename(rhs.sell_to_rolename)
			,consign_type(rhs.consign_type),category(rhs.category) { }

		GNET::Protocol *Clone() const { return new GConsignStart(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << margin;
			os << item_id;
			os << item_cnt;
			os << item_idx;
			os << money;
			os << price;
			os << shelf_period;
			os << sell_to_rolename;
			os << consign_type;
			os << category;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> margin;
			os >> item_id;
			os >> item_cnt;
			os >> item_idx;
			os >> money;
			os >> price;
			os >> shelf_period;
			os >> sell_to_rolename;
			os >> consign_type;
			os >> category;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 64; }
