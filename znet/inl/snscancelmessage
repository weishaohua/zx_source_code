	public:
		int roleid;
		int message_id;
		char message_type;
		int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_SNSCANCELMESSAGE };
	public:
		SNSCancelMessage() { type = PROTOCOL_SNSCANCELMESSAGE; }
		SNSCancelMessage(void*) : Protocol(PROTOCOL_SNSCANCELMESSAGE) { }
		SNSCancelMessage (int l_roleid,int l_message_id = 0,char l_message_type = 0,
			int l_localsid = 0)
			 : roleid(l_roleid),message_id(l_message_id),message_type(l_message_type)
			,localsid(l_localsid)
		{
			type = PROTOCOL_SNSCANCELMESSAGE;
		}

		SNSCancelMessage(const SNSCancelMessage &rhs)
			: Protocol(rhs),roleid(rhs.roleid),message_id(rhs.message_id),message_type(rhs.message_type)
			,localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new SNSCancelMessage(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << message_id;
			os << message_type;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> message_id;
			os >> message_type;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 64; }
