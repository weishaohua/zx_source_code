	public:
		int mapid;
		int raidroom_id;
		int roleid;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_FACTIONPKRAIDGETSCORE };
	public:
		FactionPkRaidGetScore() { type = PROTOCOL_FACTIONPKRAIDGETSCORE; }
		FactionPkRaidGetScore(void*) : Protocol(PROTOCOL_FACTIONPKRAIDGETSCORE) { }
		FactionPkRaidGetScore (int l_mapid,int l_raidroom_id,int l_roleid,
			unsigned int l_localsid = 0)
			 : mapid(l_mapid),raidroom_id(l_raidroom_id),roleid(l_roleid)
			,localsid(l_localsid)
		{
			type = PROTOCOL_FACTIONPKRAIDGETSCORE;
		}

		FactionPkRaidGetScore(const FactionPkRaidGetScore &rhs)
			: Protocol(rhs),mapid(rhs.mapid),raidroom_id(rhs.raidroom_id),roleid(rhs.roleid)
			,localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new FactionPkRaidGetScore(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << mapid;
			os << raidroom_id;
			os << roleid;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> mapid;
			os >> raidroom_id;
			os >> roleid;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 64; }
