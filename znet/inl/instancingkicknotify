	public:
		int roleid;
		int map_id;
		int target;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_INSTANCINGKICKNOTIFY };
	public:
		InstancingKickNotify() { type = PROTOCOL_INSTANCINGKICKNOTIFY; }
		InstancingKickNotify(void*) : Protocol(PROTOCOL_INSTANCINGKICKNOTIFY) { }
		InstancingKickNotify (int l_roleid,int l_map_id = 0,int l_target = 0,
			unsigned int l_localsid = 0)
			 : roleid(l_roleid),map_id(l_map_id),target(l_target)
			,localsid(l_localsid)
		{
			type = PROTOCOL_INSTANCINGKICKNOTIFY;
		}

		InstancingKickNotify(const InstancingKickNotify &rhs)
			: Protocol(rhs),roleid(rhs.roleid),map_id(rhs.map_id),target(rhs.target)
			,localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new InstancingKickNotify(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << map_id;
			os << target;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> map_id;
			os >> target;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
