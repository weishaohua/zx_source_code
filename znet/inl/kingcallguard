	public:
		int roleid;
		int lineid;
		int mapid;
		float posx;
		float posy;
		float posz;
		enum { PROTOCOL_TYPE = PROTOCOL_KINGCALLGUARD };
	public:
		KingCallGuard() { type = PROTOCOL_KINGCALLGUARD; }
		KingCallGuard(void*) : Protocol(PROTOCOL_KINGCALLGUARD) { }
		KingCallGuard (int l_roleid,int l_lineid = 0,int l_mapid = 0,
			float l_posx = 0.0f,float l_posy = 0.0f,float l_posz = 0.0f)
			 : roleid(l_roleid),lineid(l_lineid),mapid(l_mapid)
			,posx(l_posx),posy(l_posy),posz(l_posz)
		{
			type = PROTOCOL_KINGCALLGUARD;
		}

		KingCallGuard(const KingCallGuard &rhs)
			: Protocol(rhs),roleid(rhs.roleid),lineid(rhs.lineid),mapid(rhs.mapid)
			,posx(rhs.posx),posy(rhs.posy),posz(rhs.posz) { }

		GNET::Protocol *Clone() const { return new KingCallGuard(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << lineid;
			os << mapid;
			os << posx;
			os << posy;
			os << posz;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> lineid;
			os >> mapid;
			os >> posx;
			os >> posy;
			os >> posz;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 128; }
