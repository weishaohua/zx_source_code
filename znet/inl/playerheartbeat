	public:
		int roleid;
		int link_id;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_PLAYERHEARTBEAT };
	public:
		PlayerHeartBeat() { type = PROTOCOL_PLAYERHEARTBEAT; }
		PlayerHeartBeat(void*) : Protocol(PROTOCOL_PLAYERHEARTBEAT) { }
		PlayerHeartBeat (int l_roleid,int l_link_id,unsigned int l_localsid)
			 : roleid(l_roleid),link_id(l_link_id),localsid(l_localsid)
		{
			type = PROTOCOL_PLAYERHEARTBEAT;
		}

		PlayerHeartBeat(const PlayerHeartBeat &rhs)
			: Protocol(rhs),roleid(rhs.roleid),link_id(rhs.link_id),localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new PlayerHeartBeat(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << link_id;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> link_id;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
