	public:
		int roleid;
		int raidroom_id;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_RAIDGETROOM };
	public:
		RaidGetRoom() { type = PROTOCOL_RAIDGETROOM; }
		RaidGetRoom(void*) : Protocol(PROTOCOL_RAIDGETROOM) { }
		RaidGetRoom (int l_roleid,int l_raidroom_id = 0,unsigned int l_localsid = 0)
			 : roleid(l_roleid),raidroom_id(l_raidroom_id),localsid(l_localsid)
		{
			type = PROTOCOL_RAIDGETROOM;
		}

		RaidGetRoom(const RaidGetRoom &rhs)
			: Protocol(rhs),roleid(rhs.roleid),raidroom_id(rhs.raidroom_id),localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new RaidGetRoom(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << raidroom_id;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> raidroom_id;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 16; }
