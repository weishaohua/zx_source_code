	public:
		int retcode;
		int roleid;
		int candidate;
		char title;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_KINGDOMDISCHARGE_RE };
	public:
		KingdomDischarge_Re() { type = PROTOCOL_KINGDOMDISCHARGE_RE; }
		KingdomDischarge_Re(void*) : Protocol(PROTOCOL_KINGDOMDISCHARGE_RE) { }
		KingdomDischarge_Re (int l_retcode,int l_roleid,int l_candidate,
			char l_title,unsigned int l_localsid)
			 : retcode(l_retcode),roleid(l_roleid),candidate(l_candidate)
			,title(l_title),localsid(l_localsid)
		{
			type = PROTOCOL_KINGDOMDISCHARGE_RE;
		}

		KingdomDischarge_Re(const KingdomDischarge_Re &rhs)
			: Protocol(rhs),retcode(rhs.retcode),roleid(rhs.roleid),candidate(rhs.candidate)
			,title(rhs.title),localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new KingdomDischarge_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << roleid;
			os << candidate;
			os << title;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> roleid;
			os >> candidate;
			os >> title;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 128; }
