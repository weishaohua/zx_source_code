	public:
		int roleid;
		unsigned int localsid;
		Octets data;
		enum { PROTOCOL_TYPE = PROTOCOL_S2CFUNGAMEDATASEND };
	public:
		S2CFunGamedataSend() { type = PROTOCOL_S2CFUNGAMEDATASEND; }
		S2CFunGamedataSend(void*) : Protocol(PROTOCOL_S2CFUNGAMEDATASEND) { }
		S2CFunGamedataSend (int l_roleid,unsigned int l_localsid,const Octets& l_data)
			 : roleid(l_roleid),localsid(l_localsid),data(l_data)
		{
			type = PROTOCOL_S2CFUNGAMEDATASEND;
		}

		S2CFunGamedataSend(const S2CFunGamedataSend &rhs)
			: Protocol(rhs),roleid(rhs.roleid),localsid(rhs.localsid),data(rhs.data) { }

		GNET::Protocol *Clone() const { return new S2CFunGamedataSend(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << localsid;
			os << data;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> localsid;
			os >> data;
			return os;
		}

		int PriorPolicy( ) const { return 100; }

		bool SizePolicy(size_t size) const { return size <= 32768; }
