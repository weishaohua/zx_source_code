	public:
		int roleid;
		Octets oldname;
		Octets newname;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_FRIENDNAMECHANGE };
	public:
		FriendNameChange() { type = PROTOCOL_FRIENDNAMECHANGE; }
		FriendNameChange(void*) : Protocol(PROTOCOL_FRIENDNAMECHANGE) { }
		FriendNameChange (int l_roleid,const Octets& l_oldname = Octets(0),const Octets& l_newname = Octets(0),
			unsigned int l_localsid = 0)
			 : roleid(l_roleid),oldname(l_oldname),newname(l_newname)
			,localsid(l_localsid)
		{
			type = PROTOCOL_FRIENDNAMECHANGE;
		}

		FriendNameChange(const FriendNameChange &rhs)
			: Protocol(rhs),roleid(rhs.roleid),oldname(rhs.oldname),newname(rhs.newname)
			,localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new FriendNameChange(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << oldname;
			os << newname;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> oldname;
			os >> newname;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 128; }
