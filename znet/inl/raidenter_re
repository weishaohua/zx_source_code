	public:
		int retcode;
		unsigned int localsid;
		int roleid;
		int gs_id;
		enum { PROTOCOL_TYPE = PROTOCOL_RAIDENTER_RE };
	public:
		RaidEnter_Re() { type = PROTOCOL_RAIDENTER_RE; }
		RaidEnter_Re(void*) : Protocol(PROTOCOL_RAIDENTER_RE) { }
		RaidEnter_Re (int l_retcode,unsigned int l_localsid = 0,int l_roleid = 0,
			int l_gs_id = 0)
			 : retcode(l_retcode),localsid(l_localsid),roleid(l_roleid)
			,gs_id(l_gs_id)
		{
			type = PROTOCOL_RAIDENTER_RE;
		}

		RaidEnter_Re(const RaidEnter_Re &rhs)
			: Protocol(rhs),retcode(rhs.retcode),localsid(rhs.localsid),roleid(rhs.roleid)
			,gs_id(rhs.gs_id) { }

		GNET::Protocol *Clone() const { return new RaidEnter_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << localsid;
			os << roleid;
			os << gs_id;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> localsid;
			os >> roleid;
			os >> gs_id;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
