	public:
		unsigned int tid;
		int roleid1;
		char need_readDB1;
		int roleid2;
		char need_readDB2;
		enum { PROTOCOL_TYPE = PROTOCOL_GTRADEEND };
	public:
		GTradeEnd() { type = PROTOCOL_GTRADEEND; }
		GTradeEnd(void*) : Protocol(PROTOCOL_GTRADEEND) { }
		GTradeEnd (unsigned int l_tid,int l_roleid1,char l_need_readDB1,
			int l_roleid2,char l_need_readDB2)
			 : tid(l_tid),roleid1(l_roleid1),need_readDB1(l_need_readDB1)
			,roleid2(l_roleid2),need_readDB2(l_need_readDB2)
		{
			type = PROTOCOL_GTRADEEND;
		}

		GTradeEnd(const GTradeEnd &rhs)
			: Protocol(rhs),tid(rhs.tid),roleid1(rhs.roleid1),need_readDB1(rhs.need_readDB1)
			,roleid2(rhs.roleid2),need_readDB2(rhs.need_readDB2) { }

		GNET::Protocol *Clone() const { return new GTradeEnd(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << tid;
			os << roleid1;
			os << need_readDB1;
			os << roleid2;
			os << need_readDB2;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> tid;
			os >> roleid1;
			os >> need_readDB1;
			os >> roleid2;
			os >> need_readDB2;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
