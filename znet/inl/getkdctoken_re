	public:
		 Octets  token;
		int retcode;
		unsigned int localsid;
		unsigned int linksid;
		enum { PROTOCOL_TYPE = PROTOCOL_GETKDCTOKEN_RE };
	public:
		GetKDCToken_Re() { type = PROTOCOL_GETKDCTOKEN_RE; }
		GetKDCToken_Re(void*) : Protocol(PROTOCOL_GETKDCTOKEN_RE) { }
		GetKDCToken_Re (const  Octets & l_token,int l_retcode = 0,unsigned int l_localsid = 0,
			unsigned int l_linksid = 0)
			 : token(l_token),retcode(l_retcode),localsid(l_localsid)
			,linksid(l_linksid)
		{
			type = PROTOCOL_GETKDCTOKEN_RE;
		}

		GetKDCToken_Re(const GetKDCToken_Re &rhs)
			: Protocol(rhs),token(rhs.token),retcode(rhs.retcode),localsid(rhs.localsid)
			,linksid(rhs.linksid) { }

		GNET::Protocol *Clone() const { return new GetKDCToken_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << token;
			os << retcode;
			os << localsid;
			os << linksid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> token;
			os >> retcode;
			os >> localsid;
			os >> linksid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 256; }
