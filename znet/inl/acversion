	public:
		std::string version;
		enum { PROTOCOL_TYPE = PROTOCOL_ACVERSION };
	public:
		ACVersion() { type = PROTOCOL_ACVERSION; }
		ACVersion(void*) : Protocol(PROTOCOL_ACVERSION) { }
		ACVersion (std::string l_version)
			 : version(l_version)
		{
			type = PROTOCOL_ACVERSION;
		}

		ACVersion(const ACVersion &rhs)
			: Protocol(rhs),version(rhs.version) { }

		GNET::Protocol *Clone() const { return new ACVersion(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << version;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> version;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 256; }
