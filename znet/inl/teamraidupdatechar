	public:
		int raidroom_id;
		int map_id;
		TeamRaidRoleData roledata;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_TEAMRAIDUPDATECHAR };
	public:
		TeamRaidUpdateChar() { type = PROTOCOL_TEAMRAIDUPDATECHAR; }
		TeamRaidUpdateChar(void*) : Protocol(PROTOCOL_TEAMRAIDUPDATECHAR) { }
		TeamRaidUpdateChar (int l_raidroom_id,int l_map_id = 0,const TeamRaidRoleData& l_roledata = TeamRaidRoleData(),
			unsigned int l_localsid = 0)
			 : raidroom_id(l_raidroom_id),map_id(l_map_id),roledata(l_roledata)
			,localsid(l_localsid)
		{
			type = PROTOCOL_TEAMRAIDUPDATECHAR;
		}

		TeamRaidUpdateChar(const TeamRaidUpdateChar &rhs)
			: Protocol(rhs),raidroom_id(rhs.raidroom_id),map_id(rhs.map_id),roledata(rhs.roledata)
			,localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new TeamRaidUpdateChar(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << raidroom_id;
			os << map_id;
			os << roledata;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> raidroom_id;
			os >> map_id;
			os >> roledata;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 2048; }
