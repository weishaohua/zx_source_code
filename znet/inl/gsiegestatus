	public:
		int battle_id;
		int owner;
		int occupy_time;
		enum { PROTOCOL_TYPE = PROTOCOL_GSIEGESTATUS };
	public:
		GSiegeStatus() { type = PROTOCOL_GSIEGESTATUS; }
		GSiegeStatus(void*) : Protocol(PROTOCOL_GSIEGESTATUS) { }
		GSiegeStatus (int l_battle_id,int l_owner = 0,int l_occupy_time = 0)
			 : battle_id(l_battle_id),owner(l_owner),occupy_time(l_occupy_time)
		{
			type = PROTOCOL_GSIEGESTATUS;
		}

		GSiegeStatus(const GSiegeStatus &rhs)
			: Protocol(rhs),battle_id(rhs.battle_id),owner(rhs.owner),occupy_time(rhs.occupy_time) { }

		GNET::Protocol *Clone() const { return new GSiegeStatus(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << battle_id;
			os << owner;
			os << occupy_time;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> battle_id;
			os >> owner;
			os >> occupy_time;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 256; }
