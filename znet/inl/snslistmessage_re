	public:
		int retcode;
		int roleid;
		char message_type;
		SNSMessageBriefVector lists;
		int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_SNSLISTMESSAGE_RE };
	public:
		SNSListMessage_Re() { type = PROTOCOL_SNSLISTMESSAGE_RE; }
		SNSListMessage_Re(void*) : Protocol(PROTOCOL_SNSLISTMESSAGE_RE) { }
		SNSListMessage_Re (int l_retcode,int l_roleid = 0,char l_message_type = 0,
			SNSMessageBriefVector l_lists = SNSMessageBriefVector(),int l_localsid = 0)
			 : retcode(l_retcode),roleid(l_roleid),message_type(l_message_type)
			,lists(l_lists),localsid(l_localsid)
		{
			type = PROTOCOL_SNSLISTMESSAGE_RE;
		}

		SNSListMessage_Re(const SNSListMessage_Re &rhs)
			: Protocol(rhs),retcode(rhs.retcode),roleid(rhs.roleid),message_type(rhs.message_type)
			,lists(rhs.lists),localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new SNSListMessage_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << roleid;
			os << message_type;
			os << lists;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> roleid;
			os >> message_type;
			os >> lists;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 40960; }
