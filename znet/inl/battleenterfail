	public:
		int roleid;
		int map_id;
		enum { PROTOCOL_TYPE = PROTOCOL_BATTLEENTERFAIL };
	public:
		BattleEnterFail() { type = PROTOCOL_BATTLEENTERFAIL; }
		BattleEnterFail(void*) : Protocol(PROTOCOL_BATTLEENTERFAIL) { }
		BattleEnterFail (int l_roleid,int l_map_id = 0)
			 : roleid(l_roleid),map_id(l_map_id)
		{
			type = PROTOCOL_BATTLEENTERFAIL;
		}

		BattleEnterFail(const BattleEnterFail &rhs)
			: Protocol(rhs),roleid(rhs.roleid),map_id(rhs.map_id) { }

		GNET::Protocol *Clone() const { return new BattleEnterFail(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << map_id;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> map_id;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 64; }
