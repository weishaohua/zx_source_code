	public:
		int roleid;
		int bonus_cont;
		enum { PROTOCOL_TYPE = PROTOCOL_SENDREFCASHUSED };
	public:
		SendRefCashUsed() { type = PROTOCOL_SENDREFCASHUSED; }
		SendRefCashUsed(void*) : Protocol(PROTOCOL_SENDREFCASHUSED) { }
		SendRefCashUsed (int l_roleid,int l_bonus_cont = 0)
			 : roleid(l_roleid),bonus_cont(l_bonus_cont)
		{
			type = PROTOCOL_SENDREFCASHUSED;
		}

		SendRefCashUsed(const SendRefCashUsed &rhs)
			: Protocol(rhs),roleid(rhs.roleid),bonus_cont(rhs.bonus_cont) { }

		GNET::Protocol *Clone() const { return new SendRefCashUsed(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << bonus_cont;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> bonus_cont;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
