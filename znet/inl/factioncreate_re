	public:
		int retcode;
		int roleid;
		unsigned int factionid;
		Octets factionname;
		char scale;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_FACTIONCREATE_RE };
	public:
		FactionCreate_Re() { type = PROTOCOL_FACTIONCREATE_RE; }
		FactionCreate_Re(void*) : Protocol(PROTOCOL_FACTIONCREATE_RE) { }
		FactionCreate_Re (int l_retcode,int l_roleid,unsigned int l_factionid,
			const Octets& l_factionname,char l_scale,unsigned int l_localsid)
			 : retcode(l_retcode),roleid(l_roleid),factionid(l_factionid)
			,factionname(l_factionname),scale(l_scale),localsid(l_localsid)
		{
			type = PROTOCOL_FACTIONCREATE_RE;
		}

		FactionCreate_Re(const FactionCreate_Re &rhs)
			: Protocol(rhs),retcode(rhs.retcode),roleid(rhs.roleid),factionid(rhs.factionid)
			,factionname(rhs.factionname),scale(rhs.scale),localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new FactionCreate_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << roleid;
			os << factionid;
			os << factionname;
			os << scale;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> roleid;
			os >> factionid;
			os >> factionname;
			os >> scale;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 128; }
