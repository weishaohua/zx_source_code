	public:
		unsigned int factionid;
		int territoryscore;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_TERRITORYSCOREUPDATE };
	public:
		TerritoryScoreUpdate() { type = PROTOCOL_TERRITORYSCOREUPDATE; }
		TerritoryScoreUpdate(void*) : Protocol(PROTOCOL_TERRITORYSCOREUPDATE) { }
		TerritoryScoreUpdate (unsigned int l_factionid,int l_territoryscore = 0,unsigned int l_localsid = 0)
			 : factionid(l_factionid),territoryscore(l_territoryscore),localsid(l_localsid)
		{
			type = PROTOCOL_TERRITORYSCOREUPDATE;
		}

		TerritoryScoreUpdate(const TerritoryScoreUpdate &rhs)
			: Protocol(rhs),factionid(rhs.factionid),territoryscore(rhs.territoryscore),localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new TerritoryScoreUpdate(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << factionid;
			os << territoryscore;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> factionid;
			os >> territoryscore;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
