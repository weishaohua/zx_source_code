	public:
		int retcode;
		int roleid;
		int userid;
		char flag;
		int dst_zoneid;
		enum { PROTOCOL_TYPE = PROTOCOL_SENDDATAANDIDENTITY_RE };
	public:
		SendDataAndIdentity_Re() { type = PROTOCOL_SENDDATAANDIDENTITY_RE; }
		SendDataAndIdentity_Re(void*) : Protocol(PROTOCOL_SENDDATAANDIDENTITY_RE) { }
		SendDataAndIdentity_Re (int l_retcode,int l_roleid = 0,int l_userid = 0,
			char l_flag = 0,int l_dst_zoneid = 0)
			 : retcode(l_retcode),roleid(l_roleid),userid(l_userid)
			,flag(l_flag),dst_zoneid(l_dst_zoneid)
		{
			type = PROTOCOL_SENDDATAANDIDENTITY_RE;
		}

		SendDataAndIdentity_Re(const SendDataAndIdentity_Re &rhs)
			: Protocol(rhs),retcode(rhs.retcode),roleid(rhs.roleid),userid(rhs.userid)
			,flag(rhs.flag),dst_zoneid(rhs.dst_zoneid) { }

		GNET::Protocol *Clone() const { return new SendDataAndIdentity_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << roleid;
			os << userid;
			os << flag;
			os << dst_zoneid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> roleid;
			os >> userid;
			os >> flag;
			os >> dst_zoneid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
