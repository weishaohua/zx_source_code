	public:
		unsigned short retcode;
		int status;
		std::vector<GTerritory> cities;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_BATTLEGETMAP_RE };
	public:
		BattleGetMap_Re() { type = PROTOCOL_BATTLEGETMAP_RE; }
		BattleGetMap_Re(void*) : Protocol(PROTOCOL_BATTLEGETMAP_RE) { }
		BattleGetMap_Re (unsigned short l_retcode,int l_status,std::vector<GTerritory> l_cities = std::vector<GTerritory>(),
			unsigned int l_localsid = 0)
			 : retcode(l_retcode),status(l_status),cities(l_cities)
			,localsid(l_localsid)
		{
			type = PROTOCOL_BATTLEGETMAP_RE;
		}

		BattleGetMap_Re(const BattleGetMap_Re &rhs)
			: Protocol(rhs),retcode(rhs.retcode),status(rhs.status),cities(rhs.cities)
			,localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new BattleGetMap_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << status;
			os << cities;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> status;
			os >> cities;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 2048; }
