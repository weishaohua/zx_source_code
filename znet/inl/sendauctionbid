	public:
		int roleid;
		unsigned int auctionid;
		unsigned int bidprice;
		char bin;
		unsigned int localsid;
		GMailSyncData syncdata;
		enum { PROTOCOL_TYPE = PROTOCOL_SENDAUCTIONBID };
	public:
		SendAuctionBid() { type = PROTOCOL_SENDAUCTIONBID; }
		SendAuctionBid(void*) : Protocol(PROTOCOL_SENDAUCTIONBID) { }
		SendAuctionBid (int l_roleid,unsigned int l_auctionid = 0,unsigned int l_bidprice = 0,
			char l_bin = 0,unsigned int l_localsid = 0,const GMailSyncData& l_syncdata = GMailSyncData())
			 : roleid(l_roleid),auctionid(l_auctionid),bidprice(l_bidprice)
			,bin(l_bin),localsid(l_localsid),syncdata(l_syncdata)
		{
			type = PROTOCOL_SENDAUCTIONBID;
		}

		SendAuctionBid(const SendAuctionBid &rhs)
			: Protocol(rhs),roleid(rhs.roleid),auctionid(rhs.auctionid),bidprice(rhs.bidprice)
			,bin(rhs.bin),localsid(rhs.localsid),syncdata(rhs.syncdata) { }

		GNET::Protocol *Clone() const { return new SendAuctionBid(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << auctionid;
			os << bidprice;
			os << bin;
			os << localsid;
			os << syncdata;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> auctionid;
			os >> bidprice;
			os >> bin;
			os >> localsid;
			os >> syncdata;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 2097152; }
