	public:
		int retcode;
		int roleid;
		int userid;
		char flag;
		enum { PROTOCOL_TYPE = PROTOCOL_REMOTELOGINQUERY };
	public:
		RemoteLoginQuery() { type = PROTOCOL_REMOTELOGINQUERY; }
		RemoteLoginQuery(void*) : Protocol(PROTOCOL_REMOTELOGINQUERY) { }
		RemoteLoginQuery (int l_retcode,int l_roleid,int l_userid = 0,
			char l_flag = 0)
			 : retcode(l_retcode),roleid(l_roleid),userid(l_userid)
			,flag(l_flag)
		{
			type = PROTOCOL_REMOTELOGINQUERY;
		}

		RemoteLoginQuery(const RemoteLoginQuery &rhs)
			: Protocol(rhs),retcode(rhs.retcode),roleid(rhs.roleid),userid(rhs.userid)
			,flag(rhs.flag) { }

		GNET::Protocol *Clone() const { return new RemoteLoginQuery(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << roleid;
			os << userid;
			os << flag;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> roleid;
			os >> userid;
			os >> flag;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 256; }
