	public:
		int gs_id;
		int map_id;
		enum { PROTOCOL_TYPE = PROTOCOL_GOPENBANQUETCLOSE };
	public:
		GOpenBanquetClose() { type = PROTOCOL_GOPENBANQUETCLOSE; }
		GOpenBanquetClose(void*) : Protocol(PROTOCOL_GOPENBANQUETCLOSE) { }
		GOpenBanquetClose (int l_gs_id,int l_map_id = 0)
			 : gs_id(l_gs_id),map_id(l_map_id)
		{
			type = PROTOCOL_GOPENBANQUETCLOSE;
		}

		GOpenBanquetClose(const GOpenBanquetClose &rhs)
			: Protocol(rhs),gs_id(rhs.gs_id),map_id(rhs.map_id) { }

		GNET::Protocol *Clone() const { return new GOpenBanquetClose(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << gs_id;
			os << map_id;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> gs_id;
			os >> map_id;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 64; }
