	public:
		int roleid;
		int map_id;
		int teamid;
		unsigned int localsid;
		int zoneid;
		enum { PROTOCOL_TYPE = PROTOCOL_TEAMRAIDQUIT };
	public:
		TeamRaidQuit() { type = PROTOCOL_TEAMRAIDQUIT; }
		TeamRaidQuit(void*) : Protocol(PROTOCOL_TEAMRAIDQUIT) { }
		TeamRaidQuit (int l_roleid,int l_map_id,int l_teamid = 0,
			unsigned int l_localsid = 0,int l_zoneid = 0)
			 : roleid(l_roleid),map_id(l_map_id),teamid(l_teamid)
			,localsid(l_localsid),zoneid(l_zoneid)
		{
			type = PROTOCOL_TEAMRAIDQUIT;
		}

		TeamRaidQuit(const TeamRaidQuit &rhs)
			: Protocol(rhs),roleid(rhs.roleid),map_id(rhs.map_id),teamid(rhs.teamid)
			,localsid(rhs.localsid),zoneid(rhs.zoneid) { }

		GNET::Protocol *Clone() const { return new TeamRaidQuit(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << map_id;
			os << teamid;
			os << localsid;
			os << zoneid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> map_id;
			os >> teamid;
			os >> localsid;
			os >> zoneid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
