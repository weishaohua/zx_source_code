	public:
		int roleid;
		int provider_link_id;
		unsigned int localsid;
		int gameid;
		enum { PROTOCOL_TYPE = PROTOCOL_DISCONNECTPLAYER };
	public:
		DisconnectPlayer() { type = PROTOCOL_DISCONNECTPLAYER; }
		DisconnectPlayer(void*) : Protocol(PROTOCOL_DISCONNECTPLAYER) { }
		DisconnectPlayer (int l_roleid,int l_provider_link_id = -1,unsigned int l_localsid = 0,
			int l_gameid = 0)
			 : roleid(l_roleid),provider_link_id(l_provider_link_id),localsid(l_localsid)
			,gameid(l_gameid)
		{
			type = PROTOCOL_DISCONNECTPLAYER;
		}

		DisconnectPlayer(const DisconnectPlayer &rhs)
			: Protocol(rhs),roleid(rhs.roleid),provider_link_id(rhs.provider_link_id),localsid(rhs.localsid)
			,gameid(rhs.gameid) { }

		GNET::Protocol *Clone() const { return new DisconnectPlayer(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << provider_link_id;
			os << localsid;
			os << gameid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> provider_link_id;
			os >> localsid;
			os >> gameid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 64; }
