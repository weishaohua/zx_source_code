	public:
		int retcode;
		int roleid;
		SNSPlayerInfoCache info;
		int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_SNSGETPLAYERINFO_RE };
	public:
		SNSGetPlayerInfo_Re() { type = PROTOCOL_SNSGETPLAYERINFO_RE; }
		SNSGetPlayerInfo_Re(void*) : Protocol(PROTOCOL_SNSGETPLAYERINFO_RE) { }
		SNSGetPlayerInfo_Re (int l_retcode,int l_roleid = 0,SNSPlayerInfoCache l_info = SNSPlayerInfoCache(),
			int l_localsid = 0)
			 : retcode(l_retcode),roleid(l_roleid),info(l_info)
			,localsid(l_localsid)
		{
			type = PROTOCOL_SNSGETPLAYERINFO_RE;
		}

		SNSGetPlayerInfo_Re(const SNSGetPlayerInfo_Re &rhs)
			: Protocol(rhs),retcode(rhs.retcode),roleid(rhs.roleid),info(rhs.info)
			,localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new SNSGetPlayerInfo_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << roleid;
			os << info;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> roleid;
			os >> info;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 2048; }
