	public:
		int retcode;
		int roleid;
		int userid;
		int gsid;
		char flag;
		Octets random;
		int dst_zoneid;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_PLAYERCHANGEDS_RE };
	public:
		PlayerChangeDS_Re() { type = PROTOCOL_PLAYERCHANGEDS_RE; }
		PlayerChangeDS_Re(void*) : Protocol(PROTOCOL_PLAYERCHANGEDS_RE) { }
		PlayerChangeDS_Re (int l_retcode,int l_roleid = 0,int l_userid = 0,
			int l_gsid = 0,char l_flag = 0,const Octets& l_random = Octets(),
			int l_dst_zoneid = 0,unsigned int l_localsid = 0)
			 : retcode(l_retcode),roleid(l_roleid),userid(l_userid)
			,gsid(l_gsid),flag(l_flag),random(l_random)
			,dst_zoneid(l_dst_zoneid),localsid(l_localsid)
		{
			type = PROTOCOL_PLAYERCHANGEDS_RE;
		}

		PlayerChangeDS_Re(const PlayerChangeDS_Re &rhs)
			: Protocol(rhs),retcode(rhs.retcode),roleid(rhs.roleid),userid(rhs.userid)
			,gsid(rhs.gsid),flag(rhs.flag),random(rhs.random)
			,dst_zoneid(rhs.dst_zoneid),localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new PlayerChangeDS_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << roleid;
			os << userid;
			os << gsid;
			os << flag;
			os << random;
			os << dst_zoneid;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> roleid;
			os >> userid;
			os >> gsid;
			os >> flag;
			os >> random;
			os >> dst_zoneid;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 128; }
