	public:
		int retcode;
		int roleid;
		int task_type;
		enum { PROTOCOL_TYPE = PROTOCOL_GKINGISSUETASK_RE };
	public:
		GKingIssueTask_Re() { type = PROTOCOL_GKINGISSUETASK_RE; }
		GKingIssueTask_Re(void*) : Protocol(PROTOCOL_GKINGISSUETASK_RE) { }
		GKingIssueTask_Re (int l_retcode,int l_roleid,int l_task_type = 0)
			 : retcode(l_retcode),roleid(l_roleid),task_type(l_task_type)
		{
			type = PROTOCOL_GKINGISSUETASK_RE;
		}

		GKingIssueTask_Re(const GKingIssueTask_Re &rhs)
			: Protocol(rhs),retcode(rhs.retcode),roleid(rhs.roleid),task_type(rhs.task_type) { }

		GNET::Protocol *Clone() const { return new GKingIssueTask_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << roleid;
			os << task_type;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> roleid;
			os >> task_type;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 64; }
