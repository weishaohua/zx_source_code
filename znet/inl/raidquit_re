	public:
		int retcode;
		int raidroom_id;
		unsigned int localsid;
		int roleid;
		enum { PROTOCOL_TYPE = PROTOCOL_RAIDQUIT_RE };
	public:
		RaidQuit_Re() { type = PROTOCOL_RAIDQUIT_RE; }
		RaidQuit_Re(void*) : Protocol(PROTOCOL_RAIDQUIT_RE) { }
		RaidQuit_Re (int l_retcode,int l_raidroom_id = 0,unsigned int l_localsid = 0,
			int l_roleid = 0)
			 : retcode(l_retcode),raidroom_id(l_raidroom_id),localsid(l_localsid)
			,roleid(l_roleid)
		{
			type = PROTOCOL_RAIDQUIT_RE;
		}

		RaidQuit_Re(const RaidQuit_Re &rhs)
			: Protocol(rhs),retcode(rhs.retcode),raidroom_id(rhs.raidroom_id),localsid(rhs.localsid)
			,roleid(rhs.roleid) { }

		GNET::Protocol *Clone() const { return new RaidQuit_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << raidroom_id;
			os << localsid;
			os << roleid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> raidroom_id;
			os >> localsid;
			os >> roleid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 16; }
