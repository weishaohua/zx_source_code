	public:
		int master;
		int roleid;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_SECTLIST };
	public:
		SectList() { type = PROTOCOL_SECTLIST; }
		SectList(void*) : Protocol(PROTOCOL_SECTLIST) { }
		SectList (int l_master,int l_roleid = 0,unsigned int l_localsid = 0)
			 : master(l_master),roleid(l_roleid),localsid(l_localsid)
		{
			type = PROTOCOL_SECTLIST;
		}

		SectList(const SectList &rhs)
			: Protocol(rhs),master(rhs.master),roleid(rhs.roleid),localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new SectList(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << master;
			os << roleid;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> master;
			os >> roleid;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 128; }
