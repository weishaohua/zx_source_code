	public:
		int roleid;
		int gs_id;
		int map_id;
		enum { PROTOCOL_TYPE = PROTOCOL_OPENBANQUETLOGOUT };
	public:
		OpenBanquetLogout() { type = PROTOCOL_OPENBANQUETLOGOUT; }
		OpenBanquetLogout(void*) : Protocol(PROTOCOL_OPENBANQUETLOGOUT) { }
		OpenBanquetLogout (int l_roleid,int l_gs_id,int l_map_id = 0)
			 : roleid(l_roleid),gs_id(l_gs_id),map_id(l_map_id)
		{
			type = PROTOCOL_OPENBANQUETLOGOUT;
		}

		OpenBanquetLogout(const OpenBanquetLogout &rhs)
			: Protocol(rhs),roleid(rhs.roleid),gs_id(rhs.gs_id),map_id(rhs.map_id) { }

		GNET::Protocol *Clone() const { return new OpenBanquetLogout(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << gs_id;
			os << map_id;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> gs_id;
			os >> map_id;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 64; }
