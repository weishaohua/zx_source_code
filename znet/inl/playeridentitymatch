		GNET::Protocol *Clone() const {  return new PlayerIdentityMatch(*this); }
	public:
		enum { PROTOCOL_TYPE = RPC_PLAYERIDENTITYMATCH };
		PlayerIdentityMatch(Type type, Rpc::Data *argument, Rpc::Data *result)
			: RPC_BASECLASS(type, argument, result ) { }
		PlayerIdentityMatch(const PlayerIdentityMatch &rhs) : RPC_BASECLASS(rhs) { }
		int  PriorPolicy( ) const { return 1; }
		bool SizePolicy(size_t size) const { return size <= 2097152; }
		bool TimePolicy(int timeout) const { return timeout <= 30; }
