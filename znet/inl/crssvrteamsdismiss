	public:
		int roleid;
		int teamid;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_CRSSVRTEAMSDISMISS };
	public:
		CrssvrTeamsDismiss() { type = PROTOCOL_CRSSVRTEAMSDISMISS; }
		CrssvrTeamsDismiss(void*) : Protocol(PROTOCOL_CRSSVRTEAMSDISMISS) { }
		CrssvrTeamsDismiss (int l_roleid,int l_teamid = -1,unsigned int l_localsid = 0)
			 : roleid(l_roleid),teamid(l_teamid),localsid(l_localsid)
		{
			type = PROTOCOL_CRSSVRTEAMSDISMISS;
		}

		CrssvrTeamsDismiss(const CrssvrTeamsDismiss &rhs)
			: Protocol(rhs),roleid(rhs.roleid),teamid(rhs.teamid),localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new CrssvrTeamsDismiss(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << teamid;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> teamid;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
