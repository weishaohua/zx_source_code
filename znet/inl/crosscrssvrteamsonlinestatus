	public:
		int roleid;
		int teamid;
		char online;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_CROSSCRSSVRTEAMSONLINESTATUS };
	public:
		CrossCrssvrTeamsOnlineStatus() { type = PROTOCOL_CROSSCRSSVRTEAMSONLINESTATUS; }
		CrossCrssvrTeamsOnlineStatus(void*) : Protocol(PROTOCOL_CROSSCRSSVRTEAMSONLINESTATUS) { }
		CrossCrssvrTeamsOnlineStatus (int l_roleid,int l_teamid,char l_online,
			unsigned int l_localsid = 0)
			 : roleid(l_roleid),teamid(l_teamid),online(l_online)
			,localsid(l_localsid)
		{
			type = PROTOCOL_CROSSCRSSVRTEAMSONLINESTATUS;
		}

		CrossCrssvrTeamsOnlineStatus(const CrossCrssvrTeamsOnlineStatus &rhs)
			: Protocol(rhs),roleid(rhs.roleid),teamid(rhs.teamid),online(rhs.online)
			,localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new CrossCrssvrTeamsOnlineStatus(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << teamid;
			os << online;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> teamid;
			os >> online;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
