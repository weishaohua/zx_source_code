	public:
		int roleid;
		int teamid;
		Octets new_teamsname;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_CRSSVRTEAMSRENAME };
	public:
		CrssvrTeamsRename() { type = PROTOCOL_CRSSVRTEAMSRENAME; }
		CrssvrTeamsRename(void*) : Protocol(PROTOCOL_CRSSVRTEAMSRENAME) { }
		CrssvrTeamsRename (int l_roleid,int l_teamid = -1,const Octets& l_new_teamsname = Octets(0),
			unsigned int l_localsid = 0)
			 : roleid(l_roleid),teamid(l_teamid),new_teamsname(l_new_teamsname)
			,localsid(l_localsid)
		{
			type = PROTOCOL_CRSSVRTEAMSRENAME;
		}

		CrssvrTeamsRename(const CrssvrTeamsRename &rhs)
			: Protocol(rhs),roleid(rhs.roleid),teamid(rhs.teamid),new_teamsname(rhs.new_teamsname)
			,localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new CrssvrTeamsRename(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << teamid;
			os << new_teamsname;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> teamid;
			os >> new_teamsname;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 128; }
