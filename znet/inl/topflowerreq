	public:
		int send_roleid;
		char isRecv;
		int page;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_TOPFLOWERREQ };
	public:
		TopFlowerReq() { type = PROTOCOL_TOPFLOWERREQ; }
		TopFlowerReq(void*) : Protocol(PROTOCOL_TOPFLOWERREQ) { }
		TopFlowerReq (int l_send_roleid,char l_isRecv = 1,int l_page = 0,
			unsigned int l_localsid = 0)
			 : send_roleid(l_send_roleid),isRecv(l_isRecv),page(l_page)
			,localsid(l_localsid)
		{
			type = PROTOCOL_TOPFLOWERREQ;
		}

		TopFlowerReq(const TopFlowerReq &rhs)
			: Protocol(rhs),send_roleid(rhs.send_roleid),isRecv(rhs.isRecv),page(rhs.page)
			,localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new TopFlowerReq(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << send_roleid;
			os << isRecv;
			os << page;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> send_roleid;
			os >> isRecv;
			os >> page;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 128; }
