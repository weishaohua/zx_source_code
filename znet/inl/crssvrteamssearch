	public:
		int roleid;
		Octets name;
		int zoneid;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_CRSSVRTEAMSSEARCH };
	public:
		CrssvrTeamsSearch() { type = PROTOCOL_CRSSVRTEAMSSEARCH; }
		CrssvrTeamsSearch(void*) : Protocol(PROTOCOL_CRSSVRTEAMSSEARCH) { }
		CrssvrTeamsSearch (int l_roleid,const Octets& l_name = Octets(0),int l_zoneid = 0,
			unsigned int l_localsid = 0)
			 : roleid(l_roleid),name(l_name),zoneid(l_zoneid)
			,localsid(l_localsid)
		{
			type = PROTOCOL_CRSSVRTEAMSSEARCH;
		}

		CrssvrTeamsSearch(const CrssvrTeamsSearch &rhs)
			: Protocol(rhs),roleid(rhs.roleid),name(rhs.name),zoneid(rhs.zoneid)
			,localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new CrssvrTeamsSearch(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << name;
			os << zoneid;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> name;
			os >> zoneid;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
