#include "callid.hxx"

#ifdef WIN32
#include <winsock2.h>
#include "gnproto.h"
#include "gncompress.h"
#else
#include "protocol.h"
#include "binder.h"
#endif

namespace GNET
{

static GNET::Protocol::Type _state_GLoginServer[] = 
{
	PROTOCOL_RESPONSE,
	PROTOCOL_KEEPALIVE,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
	PROTOCOL_DOMAINLOGIN,
	PROTOCOL_KEYREESTABLISH,
	PROTOCOL_TRYRECONNECT,
};

GNET::Protocol::Manager::Session::State state_GLoginServer(_state_GLoginServer,
						sizeof(_state_GLoginServer)/sizeof(GNET::Protocol::Type), 10);

static GNET::Protocol::Type _state_GResponseReceive[] = 
{
	PROTOCOL_KEEPALIVE,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
};

GNET::Protocol::Manager::Session::State state_GResponseReceive(_state_GResponseReceive,
						sizeof(_state_GResponseReceive)/sizeof(GNET::Protocol::Type), 60);

static GNET::Protocol::Type _state_GKeyReestablished[] = 
{
	PROTOCOL_SELECTROLE,
	PROTOCOL_KEEPALIVE,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
};

GNET::Protocol::Manager::Session::State state_GKeyReestablished(_state_GKeyReestablished,
						sizeof(_state_GKeyReestablished)/sizeof(GNET::Protocol::Type), 60);

static GNET::Protocol::Type _state_GVerifyMatrix[] = 
{
	PROTOCOL_MATRIXRESPONSE,
	PROTOCOL_KEEPALIVE,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
};

GNET::Protocol::Manager::Session::State state_GVerifyMatrix(_state_GVerifyMatrix,
						sizeof(_state_GVerifyMatrix)/sizeof(GNET::Protocol::Type), 180);

static GNET::Protocol::Type _state_GKeyExchgSend[] = 
{
	PROTOCOL_KEYEXCHANGE,
	PROTOCOL_KEEPALIVE,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
};

GNET::Protocol::Manager::Session::State state_GKeyExchgSend(_state_GKeyExchgSend,
						sizeof(_state_GKeyExchgSend)/sizeof(GNET::Protocol::Type), 60);

static GNET::Protocol::Type _state_GKeyExchgSucc[] = 
{
	PROTOCOL_KEEPALIVE,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
};

GNET::Protocol::Manager::Session::State state_GKeyExchgSucc(_state_GKeyExchgSucc,
						sizeof(_state_GKeyExchgSucc)/sizeof(GNET::Protocol::Type), 60);

static GNET::Protocol::Type _state_GRoleList[] = 
{
	PROTOCOL_ROLELIST,
	PROTOCOL_KEEPALIVE,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
};

GNET::Protocol::Manager::Session::State state_GRoleList(_state_GRoleList,
						sizeof(_state_GRoleList)/sizeof(GNET::Protocol::Type), 60);

static GNET::Protocol::Type _state_GRoleList_OnGame[] = 
{
	PROTOCOL_ROLELIST,
	PROTOCOL_KEEPALIVE,
	PROTOCOL_GAMEDATASEND,
	PROTOCOL_PLAYERBASEINFO,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
};

GNET::Protocol::Manager::Session::State state_GRoleList_OnGame(_state_GRoleList_OnGame,
						sizeof(_state_GRoleList_OnGame)/sizeof(GNET::Protocol::Type), 60);

static GNET::Protocol::Type _state_GRoleListReceive[] = 
{
	PROTOCOL_KEEPALIVE,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
};

GNET::Protocol::Manager::Session::State state_GRoleListReceive(_state_GRoleListReceive,
						sizeof(_state_GRoleListReceive)/sizeof(GNET::Protocol::Type), 120);

static GNET::Protocol::Type _state_GSelectRoleServer[] = 
{
	PROTOCOL_CREATEROLE,
	PROTOCOL_DELETEROLE,
	PROTOCOL_SELECTROLE,
	PROTOCOL_UNDODELETEROLE,
	PROTOCOL_KEEPALIVE,
	PROTOCOL_SETHELPSTATES,
	PROTOCOL_GETHELPSTATES,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
};

GNET::Protocol::Manager::Session::State state_GSelectRoleServer(_state_GSelectRoleServer,
						sizeof(_state_GSelectRoleServer)/sizeof(GNET::Protocol::Type), 86400);

static GNET::Protocol::Type _state_GSelectRoleReceive[] = 
{
	PROTOCOL_KEEPALIVE,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
};

GNET::Protocol::Manager::Session::State state_GSelectRoleReceive(_state_GSelectRoleReceive,
						sizeof(_state_GSelectRoleReceive)/sizeof(GNET::Protocol::Type), 60);

static GNET::Protocol::Type _state_GCreateRoleReceive[] = 
{
	PROTOCOL_KEEPALIVE,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
};

GNET::Protocol::Manager::Session::State state_GCreateRoleReceive(_state_GCreateRoleReceive,
						sizeof(_state_GCreateRoleReceive)/sizeof(GNET::Protocol::Type), 60);

static GNET::Protocol::Type _state_GDeleteRoleReceive[] = 
{
	PROTOCOL_KEEPALIVE,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
};

GNET::Protocol::Manager::Session::State state_GDeleteRoleReceive(_state_GDeleteRoleReceive,
						sizeof(_state_GDeleteRoleReceive)/sizeof(GNET::Protocol::Type), 60);

static GNET::Protocol::Type _state_GUndoDeleteRoleReceive[] = 
{
	PROTOCOL_KEEPALIVE,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
};

GNET::Protocol::Manager::Session::State state_GUndoDeleteRoleReceive(_state_GUndoDeleteRoleReceive,
						sizeof(_state_GUndoDeleteRoleReceive)/sizeof(GNET::Protocol::Type), 60);

static GNET::Protocol::Type _state_GReadyGame[] = 
{
	PROTOCOL_ENTERWORLD,
	PROTOCOL_GAMEDATASEND,
	PROTOCOL_KEEPALIVE,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
	PROTOCOL_SETHELPSTATES,
	PROTOCOL_GETHELPSTATES,
	PROTOCOL_LINELIST,
};

GNET::Protocol::Manager::Session::State state_GReadyGame(_state_GReadyGame,
						sizeof(_state_GReadyGame)/sizeof(GNET::Protocol::Type), 120);

static GNET::Protocol::Type _state_GDataExchgServer[] = 
{
	PROTOCOL_FACBASEDATASEND,
	PROTOCOL_CREATEFACBASE,
	PROTOCOL_GETFACACTTOPTABLE,
	PROTOCOL_GETFACTIONDYNAMIC,
	PROTOCOL_ACCLIENTTIMEOUT,
	PROTOCOL_GETKDCTOKEN,
	PROTOCOL_RAIDSTART,
	PROTOCOL_RAIDENTER,
	PROTOCOL_RAIDQUIT,
	PROTOCOL_TEAMRAIDQUIT,
	PROTOCOL_HIDESEEKRAIDQUIT,
	PROTOCOL_GETCOMMONDATA,
	PROTOCOL_RAIDGETLIST,
	PROTOCOL_RAIDAPPOINT,
	PROTOCOL_RAIDKICK,
	PROTOCOL_RAIDGETROOM,
	PROTOCOL_RAIDJOINACCEPT,
	PROTOCOL_RAIDOPENVOTE,
	PROTOCOL_RAIDVOTES,
	PROTOCOL_TEAMRAIDMAPPINGSUCCESS_RE,
	PROTOCOL_HIDESEEKMAPPINGSUCCESS_RE,
	PROTOCOL_TEAMRAIDUPDATECHAR,
	PROTOCOL_FACTIONPKRAIDCHALLENGE,
	PROTOCOL_FACTIONPKRAIDCHALLENGECANCEL,
	PROTOCOL_FACTIONPKRAIDINVITE_RE,
	PROTOCOL_FACTIONPKRAIDGETSCORE,
	PROTOCOL_FACTIONPKRAIDGETLIST,
	PROTOCOL_FACTIONWITHDRAWBONUS,
	PROTOCOL_GETFRIENDGTSTATUS,
	PROTOCOL_GCIRCLECHAT,
	PROTOCOL_CIRCLELIST,
	PROTOCOL_GETCIRCLEBASEINFO,
	PROTOCOL_CLAIMCIRCLEGRADBONUS,
	PROTOCOL_CONSIGNCANCELPOST,
	PROTOCOL_CONSIGNQUERY,
	PROTOCOL_CONSIGNGETITEM,
	PROTOCOL_CONSIGNLISTALL,
	PROTOCOL_CONSIGNLISTROLE,
	PROTOCOL_CONSIGNLISTLARGECATEGORY,
	PROTOCOL_ROLELIST,
	PROTOCOL_GAMEDATASEND,
	PROTOCOL_PUBLICCHAT,
	PROTOCOL_PRIVATECHAT,
	PROTOCOL_KEEPALIVE,
	PROTOCOL_PLAYERBASEINFO,
	PROTOCOL_PLAYERBASEINFO2,
	PROTOCOL_PLAYERBASEINFOCRC,
	PROTOCOL_GETPLAYERIDBYNAME,
	PROTOCOL_SETUICONFIG,
	PROTOCOL_GETUICONFIG,
	PROTOCOL_SETHELPSTATES,
	PROTOCOL_GETHELPSTATES,
	PROTOCOL_GETPLAYERBRIEFINFO,
	PROTOCOL_GETSERVERRTT,
	PROTOCOL_ADDFRIEND,
	PROTOCOL_ADDFRIEND_RE,
	PROTOCOL_GETFRIENDS,
	PROTOCOL_GETFRIENDS_RE,
	PROTOCOL_SETGROUPNAME,
	PROTOCOL_SETGROUPNAME_RE,
	PROTOCOL_SETFRIENDGROUP,
	PROTOCOL_SETFRIENDGROUP_RE,
	PROTOCOL_DELFRIEND,
	PROTOCOL_DELFRIEND_RE,
	PROTOCOL_GETENEMIES,
	PROTOCOL_UPDATEENEMY,
	PROTOCOL_FRIENDSTATUS,
	PROTOCOL_GETSAVEDMSG,
	PROTOCOL_GETSAVEDMSG_RE,
	RPC_ADDFRIENDRQST,
	PROTOCOL_CHATROOMCREATE,
	PROTOCOL_CHATROOMINVITE,
	PROTOCOL_CHATROOMINVITE_RE,
	PROTOCOL_CHATROOMJOIN,
	PROTOCOL_CHATROOMLEAVE,
	PROTOCOL_CHATROOMEXPEL,
	PROTOCOL_CHATROOMSPEAK,
	PROTOCOL_CHATROOMLIST,
	PROTOCOL_FRIENDCALLBACKINFO,
	PROTOCOL_FRIENDCALLBACKMAIL,
	PROTOCOL_FRIENDCALLBACKAWARD,
	PROTOCOL_FRIENDCALLBACKSUBSCRIBE,
	PROTOCOL_TRADESTART,
	PROTOCOL_TRADEADDGOODS,
	PROTOCOL_TRADEREMOVEGOODS,
	PROTOCOL_TRADESUBMIT,
	PROTOCOL_TRADEMOVEOBJ,
	PROTOCOL_TRADECONFIRM,
	PROTOCOL_TRADEDISCARD,
	RPC_TRADESTARTRQST,
	PROTOCOL_GETFACTIONBASEINFO,
	PROTOCOL_BATTLEGETMAP,
	PROTOCOL_BATTLEGETLIST,
	PROTOCOL_BATTLEGETFIELD,
	PROTOCOL_BATTLEJOIN,
	PROTOCOL_BATTLEENTER,
	PROTOCOL_BATTLELEAVE,
	PROTOCOL_INSTANCINGGETLIST,
	PROTOCOL_INSTANCINGGETFIELD,
	PROTOCOL_INSTANCINGKICK,
	PROTOCOL_INSTANCINGSTART,
	PROTOCOL_INSTANCINGAVAILABLELIST,
	PROTOCOL_INSTANCINGACCEPT,
	PROTOCOL_INSTANCINGLEAVE,
	PROTOCOL_INSTANCINGAPPOINT,
	PROTOCOL_INSTANCINGENTER,
	PROTOCOL_CRSSVRTEAMSGETROLENOTIFY,
	PROTOCOL_CRSSVRTEAMSGETTEAMBASE,
	PROTOCOL_CRSSVRTEAMSGETROLELIST,
	PROTOCOL_CRSSVRTEAMSRENAME,
	PROTOCOL_CRSSVRTEAMSDISMISS,
	PROTOCOL_CRSSVRTEAMSRECRUIT,
	PROTOCOL_CRSSVRTEAMSCHGCAPTAIN,
	PROTOCOL_CRSSVRTEAMSLEAVE,
	PROTOCOL_CRSSVRTEAMSKICK,
	PROTOCOL_CRSSVRTEAMSSEARCH,
	RPC_CRSSVRTEAMSINVITE,
	RPC_FACTIONINVITE,
	PROTOCOL_FACTIONCHAT,
	PROTOCOL_FACTIONDISMISS,
	PROTOCOL_FACTIONRECRUIT,
	PROTOCOL_FACTIONEXPEL,
	PROTOCOL_FACTIONANNOUNCE,
	PROTOCOL_FACTIONAPPOINT,
	PROTOCOL_FACTIONRESIGN,
	PROTOCOL_FACTIONLEAVE,
	PROTOCOL_FACTIONNICKNAME,
	PROTOCOL_FACTIONLIST,
	PROTOCOL_FACTIONUPGRADE,
	PROTOCOL_SECTRECRUIT,
	PROTOCOL_SECTEXPEL,
	PROTOCOL_SECTLIST,
	RPC_SECTINVITE,
	PROTOCOL_GMONLINENUM,
	PROTOCOL_GMLISTONLINEUSER,
	PROTOCOL_GMKICKOUTUSER,
	PROTOCOL_GMFORBIDSELLPOINT,
	PROTOCOL_GMKICKOUTROLE,
	PROTOCOL_GMSHUTUP,
	PROTOCOL_GMSHUTUPROLE,
	PROTOCOL_GMTOGGLECHAT,
	PROTOCOL_GMFORBIDROLE,
	PROTOCOL_GMRESTARTSERVER,
	PROTOCOL_REPORT2GM,
	PROTOCOL_COMPLAIN2GM,
	PROTOCOL_ACREPORT,
	PROTOCOL_ACANSWER,
	PROTOCOL_ACACCUSE,
	PROTOCOL_CHECKNEWMAIL,
	PROTOCOL_AUCTIONOPEN,
	PROTOCOL_AUCTIONBID,
	PROTOCOL_AUCTIONLIST,
	PROTOCOL_AUCTIONCLOSE,
	PROTOCOL_AUCTIONGET,
	PROTOCOL_AUCTIONGETITEM,
	PROTOCOL_AUCTIONATTENDLIST,
	PROTOCOL_AUCTIONEXITBID,
	PROTOCOL_GETTOPTABLE,
	PROTOCOL_COMBATCHALLENGE,
	PROTOCOL_COMBATTOP,
	RPC_COMBATINVITE,
	PROTOCOL_CASHLOCK,
	PROTOCOL_CASHPASSWORDSET,
	PROTOCOL_FAMILYRECORD,
	PROTOCOL_AUTOLOCKSET,
	PROTOCOL_SIEGEINFOGET,
	PROTOCOL_SIEGEENTER,
	PROTOCOL_SIEGETOP,
	PROTOCOL_CONTESTINVITE_RE,
	PROTOCOL_CONTESTANSWER,
	PROTOCOL_CONTESTEXIT,
	PROTOCOL_FUNGAMEDATASEND,
	PROTOCOL_HOMETOWNDATASEND,
	PROTOCOL_SNSSETPLAYERINFO,
	PROTOCOL_SNSGETPLAYERINFO,
	PROTOCOL_SNSCANCELMESSAGE,
	PROTOCOL_SNSCANCELLEAVEMESSAGE,
	PROTOCOL_SNSLISTMESSAGE,
	PROTOCOL_SNSGETMESSAGE,
	PROTOCOL_SNSACCEPTAPPLY,
	PROTOCOL_REFLISTREFERRALS,
	PROTOCOL_REFWITHDRAWEXP,
	PROTOCOL_REFWITHDRAWBONUS,
	PROTOCOL_REFGETREFERENCECODE,
	PROTOCOL_TERRITORYMAPGET,
	PROTOCOL_UNIQUEBIDHISTORY,
	PROTOCOL_TRYCHANGEGS,
	PROTOCOL_DOCHANGEGS,
	PROTOCOL_LINELIST,
	PROTOCOL_SSOGETTICKETREQ,
	PROTOCOL_FASTPAY,
	PROTOCOL_QUERYROLENAMEHISTORY,
	PROTOCOL_KINGDOMANNOUNCE,
	PROTOCOL_KINGDOMAPPOINT,
	PROTOCOL_KINGDOMDISCHARGE,
	PROTOCOL_KINGDOMSETGAMEATTRI,
	PROTOCOL_KINGDOMGETINFO,
	PROTOCOL_KINGDOMGETTITLE,
	RPC_KINGGUARDINVITE,
	RPC_QUEENOPENBATHINVITE,
	PROTOCOL_QUEENTRYOPENBATH,
	PROTOCOL_GETKINGTASK,
	PROTOCOL_SENDFLOWERREQ,
	PROTOCOL_TOPFLOWERREQ,
	PROTOCOL_TOPFLOWERGETGIFT,
	PROTOCOL_OPENBANQUETCANCEL,
	PROTOCOL_OPENBANQUETQUEUECOUNT,
	PROTOCOL_OPENBANQUETENTER,
	PROTOCOL_OPENBANQUETGETFIELD,
	PROTOCOL_GETTOUCHPOINT,
	PROTOCOL_GETPASSPORTCASHADD,
};

GNET::Protocol::Manager::Session::State state_GDataExchgServer(_state_GDataExchgServer,
						sizeof(_state_GDataExchgServer)/sizeof(GNET::Protocol::Type), 120);

static GNET::Protocol::Type _state___only_for_stub[] = 
{
	PROTOCOL_BINDER,
	PROTOCOL_COMPRESSBINDER,
};

GNET::Protocol::Manager::Session::State state___only_for_stub(_state___only_for_stub,
						sizeof(_state___only_for_stub)/sizeof(GNET::Protocol::Type), 120);

static GNET::Protocol::Type _state_GDomainServer[] = 
{
	PROTOCOL_DOMAINVALIDATE,
	PROTOCOL_DOMAINCMD,
};

GNET::Protocol::Manager::Session::State state_GDomainServer(_state_GDomainServer,
						sizeof(_state_GDomainServer)/sizeof(GNET::Protocol::Type), 120);

static GNET::Protocol::Type _state_GDeliverClient[] = 
{
	PROTOCOL_FACBASEDATASEND,
	PROTOCOL_CREATEFACBASE_RE,
	PROTOCOL_GETFACACTTOPTABLE_RE,
	PROTOCOL_FACBASESTOPNOTICE,
	PROTOCOL_FACBASEENTER_RE,
	PROTOCOL_GETFACTIONDYNAMIC_RE,
	PROTOCOL_GLOBALDROPBROADCAST,
	PROTOCOL_GLOBALDROPREMAINBROADCAST,
	PROTOCOL_GETKDCTOKEN_RE,
	PROTOCOL_RAIDJOINREQ,
	PROTOCOL_RAIDOPEN_RE,
	PROTOCOL_RAIDJOIN_RE,
	PROTOCOL_RAIDJOINAPPLYLIST,
	PROTOCOL_RAIDJOINACCEPT_RE,
	PROTOCOL_RAIDENTER_RE,
	PROTOCOL_RAIDGETLIST_RE,
	PROTOCOL_RAIDSTART_RE,
	PROTOCOL_RAIDAPPOINT_RE,
	PROTOCOL_RAIDAPPOINTNOTIFY,
	PROTOCOL_RAIDSTARTNOTIFY,
	PROTOCOL_RAIDKICK_RE,
	PROTOCOL_RAIDKICKNOTIFY,
	PROTOCOL_RAIDQUIT_RE,
	PROTOCOL_RAIDGETROOM_RE,
	PROTOCOL_RAIDOPENVOTE_RE,
	PROTOCOL_RAIDBEGINVOTES,
	PROTOCOL_RAIDVOTERESULT,
	PROTOCOL_RAIDBRIEFINFO,
	PROTOCOL_TEAMRAIDAPPLY_RE,
	PROTOCOL_TEAMRAIDAPPLYNOTICE,
	PROTOCOL_TEAMRAIDACTIVEAPPLYNOTICE,
	PROTOCOL_TEAMRAIDMAPPINGSUCCESS,
	PROTOCOL_HIDESEEKMAPPINGSUCCESS,
	PROTOCOL_TEAMRAIDBEGINCHOOSECHAR,
	PROTOCOL_TEAMRAIDUPDATECHAR,
	PROTOCOL_TEAMRAIDACKTIMEOUT,
	PROTOCOL_FACTIONPKRAIDCHALLENGE_RE,
	PROTOCOL_FACTIONPKRAIDCHALLENGECANCEL_RE,
	PROTOCOL_FACTIONPKRAIDINVITE,
	PROTOCOL_FACTIONPKRAIDBEGIN,
	PROTOCOL_FACTIONPKRAIDGETSCORE_RE,
	PROTOCOL_FACTIONPKRAIDGETLIST_RE,
	PROTOCOL_FACTIONPKRAIDSTOPFIGHT,
	PROTOCOL_FACTIONWITHDRAWBONUS_RE,
	PROTOCOL_GATEOFFLINECHAT,
	PROTOCOL_UPDATEFRIENDGTSTATUS,
	PROTOCOL_GATEGETGTROLESTATUS_RE,
	PROTOCOL_GCIRCLECHAT,
	PROTOCOL_CIRCLENOTIFYLINK,
	PROTOCOL_CIRCLELIST_RE,
	PROTOCOL_GETCIRCLEBASEINFO_RE,
	PROTOCOL_CONSIGNCANCELPOST_RE,
	PROTOCOL_CONSIGNQUERY_RE,
	PROTOCOL_CONSIGNSTARTERR,
	PROTOCOL_CONSIGNGETITEM_RE,
	PROTOCOL_CONSIGNLISTALL_RE,
	PROTOCOL_CONSIGNLISTROLE_RE,
	PROTOCOL_CONSIGNLISTLARGECATEGORY_RE,
	PROTOCOL_CONSIGNPLAYER_RE,
	PROTOCOL_QUERYUSERPRIVILEGE_RE,
	PROTOCOL_QUERYUSERFORBID_RE,
	PROTOCOL_KICKOUTUSER,
	PROTOCOL_STATUSANNOUNCE,
	PROTOCOL_ONLINEANNOUNCE,
	PROTOCOL_UPDATEREMAINTIME,
	PROTOCOL_PLAYERLOGIN_RE,
	PROTOCOL_PLAYERLOGOUT,
	PROTOCOL_PLAYERRECONNECT,
	PROTOCOL_TRYRECONNECT_RE,
	PROTOCOL_ROLELIST_RE,
	PROTOCOL_CREATEROLE_RE,
	PROTOCOL_DELETEROLE_RE,
	PROTOCOL_UNDODELETEROLE_RE,
	PROTOCOL_PLAYERBASEINFO_RE,
	PROTOCOL_PLAYERBASEINFO2_RE,
	PROTOCOL_PLAYERBASEINFOCRC_RE,
	PROTOCOL_GETPLAYERIDBYNAME_RE,
	PROTOCOL_SETUICONFIG_RE,
	PROTOCOL_GETUICONFIG_RE,
	PROTOCOL_SETHELPSTATES_RE,
	PROTOCOL_GETHELPSTATES_RE,
	PROTOCOL_GETPLAYERBRIEFINFO_RE,
	PROTOCOL_DISCONNECTPLAYER,
	PROTOCOL_ANNOUNCECHALLENGEALGO,
	PROTOCOL_PRIVATECHAT,
	PROTOCOL_CHATBROADCAST,
	PROTOCOL_WORLDCHAT,
	PROTOCOL_CHATMULTICAST,
	PROTOCOL_CHATSINGLECAST,
	PROTOCOL_ROLESTATUSANNOUNCE,
	PROTOCOL_ADDFRIEND_RE,
	PROTOCOL_GETFRIENDS_RE,
	PROTOCOL_SETGROUPNAME_RE,
	PROTOCOL_SETFRIENDGROUP_RE,
	PROTOCOL_DELFRIEND_RE,
	PROTOCOL_FRIENDSTATUS,
	PROTOCOL_GETENEMIES_RE,
	PROTOCOL_UPDATEENEMY_RE,
	RPC_ADDFRIENDRQST,
	PROTOCOL_GETSAVEDMSG_RE,
	PROTOCOL_CHATROOMCREATE_RE,
	PROTOCOL_CHATROOMINVITE,
	PROTOCOL_CHATROOMINVITE_RE,
	PROTOCOL_CHATROOMJOIN_RE,
	PROTOCOL_CHATROOMLEAVE,
	PROTOCOL_CHATROOMEXPEL,
	PROTOCOL_CHATROOMSPEAK,
	PROTOCOL_CHATROOMLIST_RE,
	PROTOCOL_FRIENDCALLBACKINFO_RE,
	PROTOCOL_FRIENDCALLBACKMAIL_RE,
	PROTOCOL_FRIENDCALLBACKAWARD_RE,
	PROTOCOL_FRIENDCALLBACKSUBSCRIBE_RE,
	PROTOCOL_TRADESTART,
	PROTOCOL_TRADESTART_RE,
	PROTOCOL_TRADEADDGOODS_RE,
	PROTOCOL_TRADEREMOVEGOODS_RE,
	PROTOCOL_TRADESUBMIT_RE,
	PROTOCOL_TRADEMOVEOBJ_RE,
	PROTOCOL_TRADECONFIRM_RE,
	PROTOCOL_TRADEDISCARD_RE,
	PROTOCOL_TRADEEND,
	RPC_TRADESTARTRQST,
	RPC_USERLOGIN,
	RPC_USERLOGIN2,
	RPC_GQUERYPASSWD,
	RPC_MATRIXPASSWD,
	RPC_MATRIXPASSWD2,
	RPC_MATRIXTOKEN,
	PROTOCOL_MATRIXFAILURE,
	PROTOCOL_GMRESTARTSERVER,
	PROTOCOL_GMRESTARTSERVER_RE,
	PROTOCOL_GMSHUTDOWNLINE_RE,
	PROTOCOL_GMONLINENUM_RE,
	PROTOCOL_GMLISTONLINEUSER_RE,
	PROTOCOL_GMKICKOUTUSER_RE,
	PROTOCOL_GMFORBIDSELLPOINT_RE,
	PROTOCOL_GMKICKOUTROLE_RE,
	PROTOCOL_GMSHUTUP,
	PROTOCOL_GMSHUTUP_RE,
	PROTOCOL_GMSHUTUPROLE,
	PROTOCOL_GMSHUTUPROLE_RE,
	PROTOCOL_GMTOGGLECHAT,
	PROTOCOL_GMTOGGLECHAT_RE,
	PROTOCOL_GMFORBIDROLE,
	PROTOCOL_GMFORBIDROLE_RE,
	PROTOCOL_REPORT2GM_RE,
	PROTOCOL_COMPLAIN2GM_RE,
	PROTOCOL_ANNOUNCEFORBIDINFO,
	PROTOCOL_SETMAXONLINENUM_RE,
	RPC_GETLINEPLAYERLIMIT,
	RPC_SETLINEPLAYERLIMIT,
	PROTOCOL_ACREMOTECODE,
	PROTOCOL_ACQUESTION,
	PROTOCOL_ANNOUNCENEWMAIL,
	PROTOCOL_GETMAILLIST_RE,
	PROTOCOL_GETMAIL_RE,
	PROTOCOL_GETMAILATTACHOBJ_RE,
	PROTOCOL_DELETEMAIL_RE,
	PROTOCOL_PRESERVEMAIL_RE,
	PROTOCOL_PLAYERSENDMAIL_RE,
	PROTOCOL_AUCTIONOPEN_RE,
	PROTOCOL_AUCTIONBID_RE,
	PROTOCOL_AUCTIONCLOSE_RE,
	PROTOCOL_AUCTIONLIST_RE,
	PROTOCOL_AUCTIONGET_RE,
	PROTOCOL_AUCTIONGETITEM_RE,
	PROTOCOL_AUCTIONATTENDLIST_RE,
	PROTOCOL_AUCTIONEXITBID_RE,
	PROTOCOL_BATTLEGETMAP_RE,
	PROTOCOL_BATTLEGETLIST_RE,
	PROTOCOL_BATTLEGETFIELD_RE,
	PROTOCOL_BATTLEJOIN_RE,
	PROTOCOL_BATTLELEAVE_RE,
	PROTOCOL_BATTLEENTER_RE,
	PROTOCOL_BATTLESTARTNOTIFY,
	PROTOCOL_INSTANCINGGETLIST_RE,
	PROTOCOL_INSTANCINGGETFIELD_RE,
	PROTOCOL_INSTANCINGKICK_RE,
	PROTOCOL_INSTANCINGSTART_RE,
	PROTOCOL_INSTANCINGAVAILABLELIST_RE,
	PROTOCOL_INSTANCINGJOINREQ,
	PROTOCOL_INSTANCINGJOIN_RE,
	PROTOCOL_HOMETOWNEXCHGMONEY_RE,
	PROTOCOL_INSTANCINGLEAVE_RE,
	PROTOCOL_INSTANCINGAPPOINT_RE,
	PROTOCOL_INSTANCINGACCEPT_RE,
	PROTOCOL_INSTANCINGAPPOINTNOTIFY,
	PROTOCOL_INSTANCINGKICKNOTIFY,
	PROTOCOL_INSTANCINGENTER_RE,
	PROTOCOL_INSTANCINGSTARTNOTIFY,
	PROTOCOL_INSTANCINGCLOSENOTIFY,
	PROTOCOL_ANNOUNCESERVERATTRIBUTE,
	PROTOCOL_CRSSVRTEAMSROLENOTIFY_RE,
	PROTOCOL_CRSSVRTEAMSTEAMBASE_RE,
	PROTOCOL_CRSSVRTEAMSROLELIST_RE,
	PROTOCOL_CRSSVRTEAMSNOTIFY_RE,
	PROTOCOL_CRSSVRTEAMSSEARCH_RE,
	RPC_CRSSVRTEAMSINVITE,
	PROTOCOL_FACTIONCHAT,
	PROTOCOL_FACTIONAPPOINT_RE,
	PROTOCOL_FACTIONANNOUNCE_RE,
	PROTOCOL_FACTIONCREATE_RE,
	PROTOCOL_FAMILYRECORD,
	PROTOCOL_FACTIONDISMISS_RE,
	PROTOCOL_FACTIONEXPEL_RE,
	PROTOCOL_FACTIONLIST_RE,
	PROTOCOL_FACTIONLEAVE_RE,
	PROTOCOL_FACTIONNICKNAME_RE,
	PROTOCOL_FACTIONRESIGN_RE,
	PROTOCOL_FACTIONRECRUIT_RE,
	PROTOCOL_FACTIONUPGRADE_RE,
	PROTOCOL_GETFACTIONBASEINFO_RE,
	PROTOCOL_GETFACTIONHOSTILE_RE,
	PROTOCOL_HOSTILEADD_RE,
	PROTOCOL_HOSTILEDELETE_RE,
	PROTOCOL_HOSTILEPROTECT_RE,
	RPC_FACTIONINVITE,
	PROTOCOL_SECTRECRUIT_RE,
	PROTOCOL_SECTLIST_RE,
	PROTOCOL_SECTEXPEL_RE,
	PROTOCOL_SECTQUIT,
	RPC_SECTINVITE,
	PROTOCOL_GETTOPTABLE_RE,
	PROTOCOL_STOCKCOMMISSION_RE,
	PROTOCOL_STOCKACCOUNT_RE,
	PROTOCOL_STOCKTRANSACTION_RE,
	PROTOCOL_STOCKBILL_RE,
	PROTOCOL_STOCKCANCEL_RE,
	PROTOCOL_COMBATCHALLENGE_RE,
	PROTOCOL_COMBATCONTROL,
	PROTOCOL_COMBATSTATUS,
	PROTOCOL_COMBATTOP_RE,
	RPC_COMBATINVITE,
	PROTOCOL_CASHLOCK_RE,
	PROTOCOL_CASHPASSWORDSET_RE,
	PROTOCOL_DOMAINVALIDATE,
	PROTOCOL_DOMAINCMD_RE,
	PROTOCOL_AUTOLOCKSET_RE,
	PROTOCOL_SIEGECHALLENGE_RE,
	PROTOCOL_SIEGESETASSISTANT_RE,
	PROTOCOL_SIEGEINFOGET_RE,
	PROTOCOL_SIEGEENTER_RE,
	PROTOCOL_SIEGETOP_RE,
	PROTOCOL_FORWARDCHAT,
	PROTOCOL_CONTESTINVITEBROADCAST,
	PROTOCOL_CONTESTINVITE,
	PROTOCOL_CONTESTBEGIN,
	PROTOCOL_CONTESTQUESTION,
	PROTOCOL_CONTESTANSWER_RE,
	PROTOCOL_CONTESTPLACENOTIFY,
	PROTOCOL_CONTESTEND,
	PROTOCOL_S2CFUNGAMEDATASEND,
	PROTOCOL_S2CHOMETOWNDATASEND,
	PROTOCOL_SNSSETPLAYERINFO_RE,
	PROTOCOL_SNSPRESSMESSAGE_RE,
	PROTOCOL_SNSCANCELMESSAGE_RE,
	PROTOCOL_SNSCANCELLEAVEMESSAGE_RE,
	PROTOCOL_SNSAPPLY_RE,
	PROTOCOL_SNSAPPLYNOTIFY,
	PROTOCOL_SNSLISTMESSAGE_RE,
	PROTOCOL_SNSGETMESSAGE_RE,
	PROTOCOL_SNSGETPLAYERINFO_RE,
	PROTOCOL_SNSVOTE_RE,
	PROTOCOL_SNSACCEPTAPPLY_RE,
	PROTOCOL_REFLISTREFERRALS_RE,
	PROTOCOL_REFWITHDRAWEXP_RE,
	PROTOCOL_REFWITHDRAWBONUS_RE,
	PROTOCOL_REFGETREFERENCECODE_RE,
	PROTOCOL_ACHIEVEMENTMESSAGE,
	PROTOCOL_PKMESSAGE,
	PROTOCOL_REFINEMESSAGE,
	PROTOCOL_GSHOPNOTIFYSCHEME,
	PROTOCOL_TERRITORYMAPGET_RE,
	PROTOCOL_TERRITORYCHALLENGE_RE,
	PROTOCOL_TERRITORYENTER_RE,
	PROTOCOL_TERRITORYLEAVE_RE,
	PROTOCOL_TERRITORYENTERREMIND,
	PROTOCOL_TERRITORYSCOREUPDATE,
	PROTOCOL_UNIQUEBIDHISTORY_RE,
	PROTOCOL_UNIQUEBID_RE,
	PROTOCOL_UNIQUEGETITEM_RE,
	PROTOCOL_PLAYERCHANGEDS_RE,
	PROTOCOL_CHANGEDS_RE,
	PROTOCOL_TRYCHANGEGS_RE,
	PROTOCOL_DOCHANGEGS_RE,
	RPC_PLAYERIDENTITYMATCH,
	PROTOCOL_SSOGETTICKETREP,
	PROTOCOL_DISCOUNTANNOUNCE,
	PROTOCOL_FASTPAY_RE,
	PROTOCOL_FASTPAYBINDINFO,
	PROTOCOL_QUERYROLENAMEHISTORY_RE,
	PROTOCOL_CHANGEROLENAME_RE,
	PROTOCOL_CHANGEFACTIONNAME_RE,
	PROTOCOL_FRIENDNAMECHANGE,
	PROTOCOL_KINGDOMBATTLEENTER_RE,
	PROTOCOL_KINGDOMBATTLELEAVE_RE,
	PROTOCOL_KINGDOMANNOUNCE_RE,
	PROTOCOL_KINGDOMAPPOINT_RE,
	PROTOCOL_KINGDOMDISCHARGE_RE,
	PROTOCOL_KINGDOMSETGAMEATTRI_RE,
	PROTOCOL_KINGDOMGETINFO_RE,
	PROTOCOL_KINGDOMGETTITLE_RE,
	PROTOCOL_KINGDOMTITLECHANGE,
	PROTOCOL_KINGDOMPOINTCHANGE,
	PROTOCOL_KINGDOMKINGCHANGE,
	PROTOCOL_KINGCALLGUARDS_RE,
	PROTOCOL_QUEENOPENBATH_RE,
	PROTOCOL_KINGISSUETASK_RE,
	PROTOCOL_GETKINGTASK_RE,
	PROTOCOL_KINGGETREWARD_RE,
	RPC_KINGGUARDINVITE,
	RPC_QUEENOPENBATHINVITE,
	RPC_COMMONDATAQUERY,
	PROTOCOL_S2CLINEBROADCAST,
	PROTOCOL_TOPFLOWER_RE,
	PROTOCOL_TOPFLOWER_ERR,
	PROTOCOL_TOPFLOWERMSG_RE,
	PROTOCOL_OPENBANQUETJOIN_RE,
	PROTOCOL_OPENBANQUETNOTIFY_RE,
	PROTOCOL_OPENBANQUETDRAG_RE,
	PROTOCOL_OPENBANQUETQUEUECOUNT_RE,
	PROTOCOL_OPENBANQUETENTER_RE,
	PROTOCOL_OPENBANQUETGETFIELD_RE,
	PROTOCOL_GETTOUCHPOINT_RE,
	PROTOCOL_GETPASSPORTCASHADD_RE,
	PROTOCOL_TOUCHPOINTEXCHANGE_RE,
	PROTOCOL_ACACCUSE_RE,
	RPC_OPERATIONCMD,
};

GNET::Protocol::Manager::Session::State state_GDeliverClient(_state_GDeliverClient,
						sizeof(_state_GDeliverClient)/sizeof(GNET::Protocol::Type), 86400);

static GNET::Protocol::Type _state_GProviderLinkServer[] = 
{
	PROTOCOL_FACBASEDATASEND,
	PROTOCOL_ANNOUNCEPROVIDERID,
	PROTOCOL_S2CGAMEDATASEND,
	PROTOCOL_S2CMULTICAST,
	PROTOCOL_S2CMULTICAST2,
	PROTOCOL_S2CBROADCAST,
	PROTOCOL_CHATBROADCAST,
	PROTOCOL_CHATMULTICAST,
	PROTOCOL_CHATSINGLECAST,
	PROTOCOL_KEEPALIVE,
	PROTOCOL_PLAYERHEARTBEAT,
	PROTOCOL_DISCONNECTPLAYER,
	RPC_KINGGUARDINVITE,
};

GNET::Protocol::Manager::Session::State state_GProviderLinkServer(_state_GProviderLinkServer,
						sizeof(_state_GProviderLinkServer)/sizeof(GNET::Protocol::Type), 120);

static GNET::Protocol::Type _state_Null[] = 
{
};

GNET::Protocol::Manager::Session::State state_Null(_state_Null,
						sizeof(_state_Null)/sizeof(GNET::Protocol::Type), 5);


};

