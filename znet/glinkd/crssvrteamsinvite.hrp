
#ifndef __GNET_CRSSVRTEAMSINVITE_HPP
#define __GNET_CRSSVRTEAMSINVITE_HPP

#include "rpcdefs.h"
#include "callid.hxx"
#include "state.hxx"
#include "crssvrteamsinvitearg"
#include "crssvrteamsinviteres"
#include "glinkserver.hpp"

namespace GNET
{

class CrssvrTeamsInvite : public ProxyRpc
{
#define	RPC_BASECLASS	ProxyRpc
	#include "crssvrteamsinvite"
#undef	RPC_BASECLASS

	bool Delivery(Manager::Session::ID proxy_sid, const OctetsStream& osArg)
	{
		CrssvrTeamsInviteArg arg;
		osArg >> arg;
		DEBUG_PRINT("CrssvrTeamsInvite: roleid=%d, invitee=%d\n", arg.roleid, arg.invitee);
		GLinkServer* lsm=GLinkServer::GetInstance();
		unsigned int localsid=0;
		RoleData * invitee = lsm->GetRoleInfo(arg.invitee);
		if (invitee)
			localsid = invitee->sid;
		if( localsid && lsm->Send(localsid,*this) )
			return true;
		else
		{
			SetResult(CrssvrTeamsInviteRes(ERR_DELIVER_SEND));
			SendToSponsor();
			return false;
		}

	}

	void PostProcess(Manager::Session::ID proxy_sid,const OctetsStream& osArg, const OctetsStream& osRes)
	{
		// TODO
		// CrssvrTeamsInviteArg arg;
		// osArg >> arg;
		// CrssvrTeamsInviteRes res;
		// osRes >> res;
		// SetResult( &res ); // if you modified res, do not forget to call this. 
	}

	void OnTimeout( )
	{
		// TODO Client Only
	}

};

};
#endif
