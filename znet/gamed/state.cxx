#include "callid.hxx"

#ifdef WIN32
#include <winsock2.h>
#include "gnproto.h"
#include "gncompress.h"
#else
#include "protocol.h"
#include "binder.h"
#endif

namespace GNET
{

static GNET::Protocol::Type _state_GProviderClient[] = 
{
	PROTOCOL_FACTIONMULTIEXPSYNC,
	PROTOCOL_FACBASEDATASEND,
	PROTOCOL_FACBASEDATADELIVER,
	PROTOCOL_FACMALLCHANGE,
	PROTOCOL_STARTFACBASE,
	PROTOCOL_STOPFACBASE,
	PROTOCOL_FACMALLSYNC,
	PROTOCOL_FACBASEPROPCHANGE,
	PROTOCOL_FACBASEBUILDINGPROGRESS,
	PROTOCOL_FACAUCTIONPUT,
	PROTOCOL_GCRSSVRTEAMSPOSTSCORE,
	PROTOCOL_SENDRAIDSTART,
	PROTOCOL_SENDRAIDENTER,
	PROTOCOL_GRAIDMEMBERCHANGE,
	PROTOCOL_SENDRAIDCLOSE,
	PROTOCOL_SENDRAIDKICKOUT,
	RPC_FLOWERGIFTTAKE,
	RPC_FLOWERTAKEOFF,
	PROTOCOL_OPEN_CONTROLER,
	PROTOCOL_GOPENBANQUETROLEDEL,
	PROTOCOL_GOPENBANQUETCLOSE,
	PROTOCOL_ADDCASH_RE,
	PROTOCOL_GCIRCLECHAT,
	PROTOCOL_BONUSEXP,
	PROTOCOL_UPDATEROLECIRCLE,
	RPC_CIRCLEGETASYNCDATA,
	PROTOCOL_BONUSITEM,
	PROTOCOL_ANNOUNCEPROVIDERID,
	PROTOCOL_PLAYERKICKOUT,
	PROTOCOL_PLAYERLOGIN,
	PROTOCOL_PLAYEROFFLINE,
	PROTOCOL_PLAYERRECONNECT,
	PROTOCOL_PLAYERSTATUSSYNC,
	PROTOCOL_PLAYERSTATUSANNOUNCE,
	PROTOCOL_BATTLEFLAGBUFFSCOPE,
	PROTOCOL_GETCOUPONSREQ,
	PROTOCOL_GETTASKDATA_RE,
	PROTOCOL_SETTASKDATA_RE,
	PROTOCOL_ENTERWORLD,
	PROTOCOL_C2SGAMEDATASEND,
	PROTOCOL_PUBLICCHAT,
	PROTOCOL_PRIVATECHAT,
	PROTOCOL_FACTIONCHAT,
	PROTOCOL_COMMONDATASYNC,
	RPC_COMMONDATACHANGE,
	PROTOCOL_GTRADESTART,
	PROTOCOL_GTRADEEND,
	PROTOCOL_ANNOUNCEGM,
	PROTOCOL_GMRESTARTSERVER,
	PROTOCOL_GMSHUTDOWNLINE,
	PROTOCOL_GMAILENDSYNC,
	PROTOCOL_QUERYREWARDTYPE_RE,
	PROTOCOL_QUERYGAMESERVERATTR_RE,
	PROTOCOL_ACREPORTCHEATER,
	PROTOCOL_BATTLESTART,
	PROTOCOL_SENDBATTLEENTER,
	PROTOCOL_SENDINSTANCINGSTART,
	PROTOCOL_SENDINSTANCINGENTER,
	PROTOCOL_GBATTLEJOIN,
	PROTOCOL_PLAYERFACTIONINFO_RE,
	PROTOCOL_SYNCPLAYERFACTION,
	PROTOCOL_SYNCFACTIONLEVEL,
	PROTOCOL_SYNCFAMILYDATA,
	PROTOCOL_SYNCFACTIONHOSTILES,
	PROTOCOL_NETBARREWARD,
	RPC_GETWEEKLYTOP,
	RPC_GETDAILYTOP,
	RPC_PUTSPOUSE,
	PROTOCOL_NOTIFYDAILYTABLECHANGE,
	PROTOCOL_ONDIVORCE,
	PROTOCOL_COMBATCONTROL,
	PROTOCOL_PLAYERCHANGEGS,
	RPC_TASKASYNCDATA,
	PROTOCOL_FAMILYEXPSHARE,
	PROTOCOL_SENDASYNCDATA,
	PROTOCOL_ADDICTIONCONTROL,
	PROTOCOL_VIPINFONOTIFY,
	PROTOCOL_HOSTILEPROTECT_RE,
	PROTOCOL_HOSTILEDELETE_RE,
	PROTOCOL_HOSTILEADD_RE,
	PROTOCOL_SENDSIEGESTART,
	PROTOCOL_GSIEGESTATUS,
	PROTOCOL_SECTQUIT,
	PROTOCOL_SECTRECRUIT_RE,
	PROTOCOL_SECTEXPEL_RE,
	PROTOCOL_SECTUPDATE,
	PROTOCOL_CONTESTRESULT,
	RPC_CERTCHALLENGE,
	PROTOCOL_SENDSNSRESULT,
	PROTOCOL_BILLINGREQUEST2,
	PROTOCOL_BILLINGBALANCE,
	PROTOCOL_SENDREFADDEXP,
	PROTOCOL_SENDREFADDBONUS,
	PROTOCOL_SENDCHANGEPROFILE_RE,
	PROTOCOL_GSHOPSETSALESCHEME,
	PROTOCOL_GSHOPSETDISCOUNTSCHEME,
	PROTOCOL_SENDTERRITORYSTART,
	RPC_GTERRITORYITEMGET,
	PROTOCOL_SYNCTERRITORYLIST,
	RPC_GUNIQUEBID,
	RPC_GUNIQUEGETITEM,
	RPC_GETFRIENDNUMBER,
	PROTOCOL_PLAYERCHANGEDS,
	PROTOCOL_GCONSIGNEND,
	PROTOCOL_PLAYERCONSIGNOFFLINE,
	PROTOCOL_GCONSIGNENDROLE,
	PROTOCOL_GCHANGEROLENAME_RE,
	PROTOCOL_GCHANGEFACTIONNAME_RE,
	PROTOCOL_GTRECONNECT,
	PROTOCOL_ROLEENTERVOICECHANNEL,
	PROTOCOL_ROLELEAVEVOICECHANNEL,
	PROTOCOL_KINGDOMBATTLESTART,
	PROTOCOL_KINGDOMBATTLESTOP,
	PROTOCOL_KINGDOMINFOSYNC,
	PROTOCOL_KINGDOMTITLESYNC,
	PROTOCOL_KINGDOMPOINTSYNC,
	PROTOCOL_KINGCALLGUARD,
	PROTOCOL_QUEENOPENBATH,
	PROTOCOL_QUEENCLOSEBATH,
	PROTOCOL_SYNCBATHTIMES,
	PROTOCOL_GKINGISSUETASK_RE,
	PROTOCOL_GKINGGETREWARD_RE,
	RPC_KINGGUARDINVITE,
	PROTOCOL_ISCONNALIVE,
	PROTOCOL_GTOUCHPOINTEXCHANGE_RE,
	PROTOCOL_FORBIDSERVICE,
	RPC_GETCASHAVAIL,
	PROTOCOL_WEBORDERNOTICE,
};

GNET::Protocol::Manager::Session::State state_GProviderClient(_state_GProviderClient,
						sizeof(_state_GProviderClient)/sizeof(GNET::Protocol::Type), 86400);


};

