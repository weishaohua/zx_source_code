
#ifndef __GNET_COMMONDATACHANGE_HPP
#define __GNET_COMMONDATACHANGE_HPP

#include "rpcdefs.h"
#include "callid.hxx"
#include "state.hxx"

#include "commondataarg"
#include "commondatares"

void OnRecvCommonDataRpcCallResult (int session_key,void *v_data, size_t v_size, 
				int result, void *user_data);
namespace GNET
{

class CommonDataChange : public Rpc
{
#define	RPC_BASECLASS	Rpc
	#include "commondatachange"
#undef	RPC_BASECLASS

	void Server(Rpc::Data *argument, Rpc::Data *result, Manager *manager, Manager::Session::ID sid)
	{
		// CommonDataArg *arg = (CommonDataArg *)argument;
		// CommonDataRes *res = (CommonDataRes *)result;
	}

	void Client(Rpc::Data *argument, Rpc::Data *result, Manager *manager, Manager::Session::ID sid)
	{
		// TODO
		CommonDataArg *arg = (CommonDataArg *)argument;
		CommonDataRes *res = (CommonDataRes *)result;

		OnRecvCommonDataRpcCallResult (arg->session_key, res->data.begin(),
			res->data.size(), res->result, (void*)arg->user_data);
	}

	void OnTimeout()
	{
		// TODO Client Only
		CommonDataArg *arg = (CommonDataArg *)argument;
		OnRecvCommonDataRpcCallResult (arg->session_key, NULL,0, 2, (void*)arg->user_data);
	}

};

};
#endif
