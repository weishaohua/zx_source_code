#ifndef __GNET_DBFACTIONAPPOINTARG_RPCDATA
#define __GNET_DBFACTIONAPPOINTARG_RPCDATA

#include "rpcdefs.h"


namespace GNET
{
	class DBFactionAppointArg : public GNET::Rpc::Data
	{
	public:
		unsigned int fid;
		unsigned int roleid;
		unsigned char title;

	public:
		DBFactionAppointArg (unsigned int l_fid = 0,unsigned int l_roleid = 0,unsigned char l_title = 0)
			: fid(l_fid),roleid(l_roleid),title(l_title)
		{
		}

		DBFactionAppointArg(const DBFactionAppointArg &rhs)
			: fid(rhs.fid),roleid(rhs.roleid),title(rhs.title) { }

		Rpc::Data *Clone() const { return new DBFactionAppointArg(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const DBFactionAppointArg *r = dynamic_cast<const DBFactionAppointArg *>(&rhs);
			if (r && r != this)
			{
				fid = r->fid;
				roleid = r->roleid;
				title = r->title;
			}
			return *this;
		}

		DBFactionAppointArg& operator = (const DBFactionAppointArg &rhs)
		{
			const DBFactionAppointArg *r = &rhs;
			if (r && r != this)
			{
				fid = r->fid;
				roleid = r->roleid;
				title = r->title;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << fid;
			os << roleid;
			os << title;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> fid;
			os >> roleid;
			os >> title;
			return os;
		}

	};
};
#endif
