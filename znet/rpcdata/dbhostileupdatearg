#ifndef __GNET_DBHOSTILEUPDATEARG_RPCDATA
#define __GNET_DBHOSTILEUPDATEARG_RPCDATA

#include "rpcdefs.h"


namespace GNET
{
	class DBHostileUpdateArg : public GNET::Rpc::Data
	{
	public:
		int factionid;
		unsigned char datamask;
		unsigned char actionpoint;

	public:
		DBHostileUpdateArg (unsigned char l_datamask = 0,unsigned char l_actionpoint = 0)
			: datamask(l_datamask),actionpoint(l_actionpoint)
		{
		}

		DBHostileUpdateArg(const DBHostileUpdateArg &rhs)
			: factionid(rhs.factionid),datamask(rhs.datamask),actionpoint(rhs.actionpoint) { }

		Rpc::Data *Clone() const { return new DBHostileUpdateArg(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const DBHostileUpdateArg *r = dynamic_cast<const DBHostileUpdateArg *>(&rhs);
			if (r && r != this)
			{
				factionid = r->factionid;
				datamask = r->datamask;
				actionpoint = r->actionpoint;
			}
			return *this;
		}

		DBHostileUpdateArg& operator = (const DBHostileUpdateArg &rhs)
		{
			const DBHostileUpdateArg *r = &rhs;
			if (r && r != this)
			{
				factionid = r->factionid;
				datamask = r->datamask;
				actionpoint = r->actionpoint;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << factionid;
			os << datamask;
			os << actionpoint;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> factionid;
			os >> datamask;
			os >> actionpoint;
			return os;
		}

	};
};
#endif
