#ifndef __GNET_GFAMILYBRIEF_RPCDATA
#define __GNET_GFAMILYBRIEF_RPCDATA

#include "rpcdefs.h"


namespace GNET
{
	class GFamilyBrief : public GNET::Rpc::Data
	{
	public:
		unsigned int fid;
		Octets name;

	public:
		GFamilyBrief (unsigned int l_fid = 0,const Octets& l_name = Octets(0))
			: fid(l_fid),name(l_name)
		{
		}

		GFamilyBrief(const GFamilyBrief &rhs)
			: fid(rhs.fid),name(rhs.name) { }

		Rpc::Data *Clone() const { return new GFamilyBrief(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const GFamilyBrief *r = dynamic_cast<const GFamilyBrief *>(&rhs);
			if (r && r != this)
			{
				fid = r->fid;
				name = r->name;
			}
			return *this;
		}

		GFamilyBrief& operator = (const GFamilyBrief &rhs)
		{
			const GFamilyBrief *r = &rhs;
			if (r && r != this)
			{
				fid = r->fid;
				name = r->name;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << fid;
			os << name;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> fid;
			os >> name;
			return os;
		}

	};
};
#endif
