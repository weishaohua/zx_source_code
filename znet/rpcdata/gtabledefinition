#ifndef __GNET_GTABLEDEFINITION_RPCDATA
#define __GNET_GTABLEDEFINITION_RPCDATA

#include "rpcdefs.h"

#include "user"
#include "grolebase"
#include "grolestatus"
#include "groletask"
#include "grolepocket"
#include "grolestorehouse"
#include "gmailbox"
#include "gfriendlist"
#include "message"
#include "gfamily"
#include "gfactioninfo"
#include "gsect"
#include "stockorder"
#include "gtaskdata"
#include "gterritorystore"
#include "gsyslog"
#include "gtoptable"
#include "groletableclsconfig"
#include "gsnsplayerinfocache"
#include "gsnsmessage"
#include "grolebase2"
#include "greferral"
#include "clearroledata"
#include "groleachievement"
#include "gtabletopflowerdata"
#include "gkingdominfo"
#include "gcrssvrteamsdata"
#include "guniqueauction"
#include "gcircledb"
#include "gconsigndb"
#include "ggtactivate"
#include "gfriendcallback"
#include "groleaward"
#include "grolenamehis"
#include "gserviceforbidcmdlist"
#include "weborder"
#include "gfactionbase"

namespace GNET
{
	class GTableDefinition : public GNET::Rpc::Data
	{
	public:
		User user;
		GRoleBase base;
		GRoleStatus status;
		GRoleTask task;
		GRolePocket inventory;
		GRoleStorehouse storehouse;
		GMailBox mailbox;
		GFriendList friends;
		MessageVector messages;
		GFamily family;
		GFactionInfo faction;
		GSect sect;
		StockOrder order;
		GTaskData gtask;
		GTerritoryStore citystore;
		GSysLog syslog;
		GTopTable top;
		Octets config;
		int factionname;
		int familyname;
		int waitdel;
		GRoleTableClsconfig clsconfig;
		int rolename;
		char shoplog;
		char auction;
		Octets commondata;
		GSNSPlayerInfoCache snsplayerinfo;
		GSNSMessage snsmessage;
		GRoleBase2 base2;
		GReferral referral;
		std::vector<ClearRoleData> clrrole;
		GRoleAchievement achievement;
		Octets hometown;
		GTableTopFlowerData topflower;
		GKingdomInfo kingdom;
		GCrssvrTeamsData crssvrteams;
		int crssvrteamsname;
		GUniqueAuction uniqueauction;
		GCircleDB circle;
		GConsignDB consign;
		GConsignDB finished_consign;
		GGTActivate gtactivate;
		GFriendCallback friendcallback;
		GRoleAward award;
		int dropcounter;
		GRoleNameHisVector rolenamehis;
		GServiceForbidCmdList operationcmd;
		WebOrder weborder;
		GFactionBase factionbase;

	public:
		GTableDefinition (const Octets& l_hometown = Octets())
			: hometown(l_hometown)
		{
		}

		GTableDefinition(const GTableDefinition &rhs)
			: user(rhs.user),base(rhs.base),status(rhs.status),
			task(rhs.task),inventory(rhs.inventory),storehouse(rhs.storehouse),
			mailbox(rhs.mailbox),friends(rhs.friends),messages(rhs.messages),
			family(rhs.family),faction(rhs.faction),sect(rhs.sect),
			order(rhs.order),gtask(rhs.gtask),citystore(rhs.citystore),
			syslog(rhs.syslog),top(rhs.top),config(rhs.config),
			factionname(rhs.factionname),familyname(rhs.familyname),waitdel(rhs.waitdel),
			clsconfig(rhs.clsconfig),rolename(rhs.rolename),shoplog(rhs.shoplog),
			auction(rhs.auction),commondata(rhs.commondata),snsplayerinfo(rhs.snsplayerinfo),
			snsmessage(rhs.snsmessage),base2(rhs.base2),referral(rhs.referral),
			clrrole(rhs.clrrole),achievement(rhs.achievement),hometown(rhs.hometown),
			topflower(rhs.topflower),kingdom(rhs.kingdom),crssvrteams(rhs.crssvrteams),
			crssvrteamsname(rhs.crssvrteamsname),uniqueauction(rhs.uniqueauction),circle(rhs.circle),
			consign(rhs.consign),finished_consign(rhs.finished_consign),gtactivate(rhs.gtactivate),
			friendcallback(rhs.friendcallback),award(rhs.award),dropcounter(rhs.dropcounter),
			rolenamehis(rhs.rolenamehis),operationcmd(rhs.operationcmd),weborder(rhs.weborder),
			factionbase(rhs.factionbase) { }

		Rpc::Data *Clone() const { return new GTableDefinition(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const GTableDefinition *r = dynamic_cast<const GTableDefinition *>(&rhs);
			if (r && r != this)
			{
				user = r->user;
				base = r->base;
				status = r->status;
				task = r->task;
				inventory = r->inventory;
				storehouse = r->storehouse;
				mailbox = r->mailbox;
				friends = r->friends;
				messages = r->messages;
				family = r->family;
				faction = r->faction;
				sect = r->sect;
				order = r->order;
				gtask = r->gtask;
				citystore = r->citystore;
				syslog = r->syslog;
				top = r->top;
				config = r->config;
				factionname = r->factionname;
				familyname = r->familyname;
				waitdel = r->waitdel;
				clsconfig = r->clsconfig;
				rolename = r->rolename;
				shoplog = r->shoplog;
				auction = r->auction;
				commondata = r->commondata;
				snsplayerinfo = r->snsplayerinfo;
				snsmessage = r->snsmessage;
				base2 = r->base2;
				referral = r->referral;
				clrrole = r->clrrole;
				achievement = r->achievement;
				hometown = r->hometown;
				topflower = r->topflower;
				kingdom = r->kingdom;
				crssvrteams = r->crssvrteams;
				crssvrteamsname = r->crssvrteamsname;
				uniqueauction = r->uniqueauction;
				circle = r->circle;
				consign = r->consign;
				finished_consign = r->finished_consign;
				gtactivate = r->gtactivate;
				friendcallback = r->friendcallback;
				award = r->award;
				dropcounter = r->dropcounter;
				rolenamehis = r->rolenamehis;
				operationcmd = r->operationcmd;
				weborder = r->weborder;
				factionbase = r->factionbase;
			}
			return *this;
		}

		GTableDefinition& operator = (const GTableDefinition &rhs)
		{
			const GTableDefinition *r = &rhs;
			if (r && r != this)
			{
				user = r->user;
				base = r->base;
				status = r->status;
				task = r->task;
				inventory = r->inventory;
				storehouse = r->storehouse;
				mailbox = r->mailbox;
				friends = r->friends;
				messages = r->messages;
				family = r->family;
				faction = r->faction;
				sect = r->sect;
				order = r->order;
				gtask = r->gtask;
				citystore = r->citystore;
				syslog = r->syslog;
				top = r->top;
				config = r->config;
				factionname = r->factionname;
				familyname = r->familyname;
				waitdel = r->waitdel;
				clsconfig = r->clsconfig;
				rolename = r->rolename;
				shoplog = r->shoplog;
				auction = r->auction;
				commondata = r->commondata;
				snsplayerinfo = r->snsplayerinfo;
				snsmessage = r->snsmessage;
				base2 = r->base2;
				referral = r->referral;
				clrrole = r->clrrole;
				achievement = r->achievement;
				hometown = r->hometown;
				topflower = r->topflower;
				kingdom = r->kingdom;
				crssvrteams = r->crssvrteams;
				crssvrteamsname = r->crssvrteamsname;
				uniqueauction = r->uniqueauction;
				circle = r->circle;
				consign = r->consign;
				finished_consign = r->finished_consign;
				gtactivate = r->gtactivate;
				friendcallback = r->friendcallback;
				award = r->award;
				dropcounter = r->dropcounter;
				rolenamehis = r->rolenamehis;
				operationcmd = r->operationcmd;
				weborder = r->weborder;
				factionbase = r->factionbase;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << user;
			os << base;
			os << status;
			os << task;
			os << inventory;
			os << storehouse;
			os << mailbox;
			os << friends;
			os << messages;
			os << family;
			os << faction;
			os << sect;
			os << order;
			os << gtask;
			os << citystore;
			os << syslog;
			os << top;
			os << config;
			os << factionname;
			os << familyname;
			os << waitdel;
			os << clsconfig;
			os << rolename;
			os << shoplog;
			os << auction;
			os << commondata;
			os << snsplayerinfo;
			os << snsmessage;
			os << base2;
			os << referral;
			os << clrrole;
			os << achievement;
			os << hometown;
			os << topflower;
			os << kingdom;
			os << crssvrteams;
			os << crssvrteamsname;
			os << uniqueauction;
			os << circle;
			os << consign;
			os << finished_consign;
			os << gtactivate;
			os << friendcallback;
			os << award;
			os << dropcounter;
			os << rolenamehis;
			os << operationcmd;
			os << weborder;
			os << factionbase;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> user;
			os >> base;
			os >> status;
			os >> task;
			os >> inventory;
			os >> storehouse;
			os >> mailbox;
			os >> friends;
			os >> messages;
			os >> family;
			os >> faction;
			os >> sect;
			os >> order;
			os >> gtask;
			os >> citystore;
			os >> syslog;
			os >> top;
			os >> config;
			os >> factionname;
			os >> familyname;
			os >> waitdel;
			os >> clsconfig;
			os >> rolename;
			os >> shoplog;
			os >> auction;
			os >> commondata;
			os >> snsplayerinfo;
			os >> snsmessage;
			os >> base2;
			os >> referral;
			os >> clrrole;
			os >> achievement;
			os >> hometown;
			os >> topflower;
			os >> kingdom;
			os >> crssvrteams;
			os >> crssvrteamsname;
			os >> uniqueauction;
			os >> circle;
			os >> consign;
			os >> finished_consign;
			os >> gtactivate;
			os >> friendcallback;
			os >> award;
			os >> dropcounter;
			os >> rolenamehis;
			os >> operationcmd;
			os >> weborder;
			os >> factionbase;
			return os;
		}

	};
};
#endif
