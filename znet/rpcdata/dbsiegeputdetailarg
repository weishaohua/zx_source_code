#ifndef __GNET_DBSIEGEPUTDETAILARG_RPCDATA
#define __GNET_DBSIEGEPUTDETAILARG_RPCDATA

#include "rpcdefs.h"


namespace GNET
{
	class DBSiegePutDetailArg : public GNET::Rpc::Data
	{
	public:
		int battle_id;
		int timestamp;
		Octets detail;

	public:
		DBSiegePutDetailArg (int l_battle_id = 0,int l_timestamp = 0,const Octets& l_detail = Octets(0))
			: battle_id(l_battle_id),timestamp(l_timestamp),detail(l_detail)
		{
		}

		DBSiegePutDetailArg(const DBSiegePutDetailArg &rhs)
			: battle_id(rhs.battle_id),timestamp(rhs.timestamp),detail(rhs.detail) { }

		Rpc::Data *Clone() const { return new DBSiegePutDetailArg(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const DBSiegePutDetailArg *r = dynamic_cast<const DBSiegePutDetailArg *>(&rhs);
			if (r && r != this)
			{
				battle_id = r->battle_id;
				timestamp = r->timestamp;
				detail = r->detail;
			}
			return *this;
		}

		DBSiegePutDetailArg& operator = (const DBSiegePutDetailArg &rhs)
		{
			const DBSiegePutDetailArg *r = &rhs;
			if (r && r != this)
			{
				battle_id = r->battle_id;
				timestamp = r->timestamp;
				detail = r->detail;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << battle_id;
			os << timestamp;
			os << detail;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> battle_id;
			os >> timestamp;
			os >> detail;
			return os;
		}

	};
};
#endif
