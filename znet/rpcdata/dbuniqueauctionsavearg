#ifndef __GNET_DBUNIQUEAUCTIONSAVEARG_RPCDATA
#define __GNET_DBUNIQUEAUCTIONSAVEARG_RPCDATA

#include "rpcdefs.h"

#include "guniqueauction"

namespace GNET
{
	class DBUniqueAuctionSaveArg : public GNET::Rpc::Data
	{
	public:
		GUniqueAuction data;

	public:
		DBUniqueAuctionSaveArg (const GUniqueAuction& l_data = GUniqueAuction())
			: data(l_data)
		{
		}

		DBUniqueAuctionSaveArg(const DBUniqueAuctionSaveArg &rhs)
			: data(rhs.data) { }

		Rpc::Data *Clone() const { return new DBUniqueAuctionSaveArg(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const DBUniqueAuctionSaveArg *r = dynamic_cast<const DBUniqueAuctionSaveArg *>(&rhs);
			if (r && r != this)
			{
				data = r->data;
			}
			return *this;
		}

		DBUniqueAuctionSaveArg& operator = (const DBUniqueAuctionSaveArg &rhs)
		{
			const DBUniqueAuctionSaveArg *r = &rhs;
			if (r && r != this)
			{
				data = r->data;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << data;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> data;
			return os;
		}

	};
};
#endif
