#ifndef __GNET_MATRIXPASSWDARG2_RPCDATA
#define __GNET_MATRIXPASSWDARG2_RPCDATA

#include "rpcdefs.h"


namespace GNET
{
	class MatrixPasswdArg2 : public GNET::Rpc::Data
	{
	public:
		Octets account;
		Octets challenge;
		int loginip;

	public:
		MatrixPasswdArg2 (const Octets& l_account = Octets(0),const Octets& l_challenge = Octets(0),int l_loginip = 0)
			: account(l_account),challenge(l_challenge),loginip(l_loginip)
		{
		}

		MatrixPasswdArg2(const MatrixPasswdArg2 &rhs)
			: account(rhs.account),challenge(rhs.challenge),loginip(rhs.loginip) { }

		Rpc::Data *Clone() const { return new MatrixPasswdArg2(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const MatrixPasswdArg2 *r = dynamic_cast<const MatrixPasswdArg2 *>(&rhs);
			if (r && r != this)
			{
				account = r->account;
				challenge = r->challenge;
				loginip = r->loginip;
			}
			return *this;
		}

		MatrixPasswdArg2& operator = (const MatrixPasswdArg2 &rhs)
		{
			const MatrixPasswdArg2 *r = &rhs;
			if (r && r != this)
			{
				account = r->account;
				challenge = r->challenge;
				loginip = r->loginip;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << account;
			os << challenge;
			os << loginip;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> account;
			os >> challenge;
			os >> loginip;
			return os;
		}

	};
};
#endif
