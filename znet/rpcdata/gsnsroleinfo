#ifndef __GNET_GSNSROLEINFO_RPCDATA
#define __GNET_GSNSROLEINFO_RPCDATA

#include "rpcdefs.h"


namespace GNET
{
	class GSNSRoleInfo : public GNET::Rpc::Data
	{
	public:
		int level;
		int sub_level;
		char gender;
		unsigned char occupation;
		int spouse;
		Octets rolename;
		Octets sectname;
		Octets familyname;
		Octets factionname;
		char factiontitle;
		int faction_level;
		int reserved1;
		int reserved2;
		int reserved3;
		int reserved4;
		int reserved5;
		int reserved6;

	public:
		GSNSRoleInfo (int l_level = 0,int l_sub_level = 0,char l_gender = 0
			,unsigned char l_occupation = 0,int l_spouse = 0,const Octets& l_rolename = Octets()
			,const Octets& l_sectname = Octets(),const Octets& l_familyname = Octets(),const Octets& l_factionname = Octets()
			,char l_factiontitle = 0,int l_faction_level = 0,int l_reserved1 = 0
			,int l_reserved2 = 0,int l_reserved3 = 0,int l_reserved4 = 0
			,int l_reserved5 = 0,int l_reserved6 = 0)
			: level(l_level),sub_level(l_sub_level),gender(l_gender)
			,occupation(l_occupation),spouse(l_spouse),rolename(l_rolename)
			,sectname(l_sectname),familyname(l_familyname),factionname(l_factionname)
			,factiontitle(l_factiontitle),faction_level(l_faction_level),reserved1(l_reserved1)
			,reserved2(l_reserved2),reserved3(l_reserved3),reserved4(l_reserved4)
			,reserved5(l_reserved5),reserved6(l_reserved6)
		{
		}

		GSNSRoleInfo(const GSNSRoleInfo &rhs)
			: level(rhs.level),sub_level(rhs.sub_level),gender(rhs.gender),
			occupation(rhs.occupation),spouse(rhs.spouse),rolename(rhs.rolename),
			sectname(rhs.sectname),familyname(rhs.familyname),factionname(rhs.factionname),
			factiontitle(rhs.factiontitle),faction_level(rhs.faction_level),reserved1(rhs.reserved1),
			reserved2(rhs.reserved2),reserved3(rhs.reserved3),reserved4(rhs.reserved4),
			reserved5(rhs.reserved5),reserved6(rhs.reserved6) { }

		Rpc::Data *Clone() const { return new GSNSRoleInfo(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const GSNSRoleInfo *r = dynamic_cast<const GSNSRoleInfo *>(&rhs);
			if (r && r != this)
			{
				level = r->level;
				sub_level = r->sub_level;
				gender = r->gender;
				occupation = r->occupation;
				spouse = r->spouse;
				rolename = r->rolename;
				sectname = r->sectname;
				familyname = r->familyname;
				factionname = r->factionname;
				factiontitle = r->factiontitle;
				faction_level = r->faction_level;
				reserved1 = r->reserved1;
				reserved2 = r->reserved2;
				reserved3 = r->reserved3;
				reserved4 = r->reserved4;
				reserved5 = r->reserved5;
				reserved6 = r->reserved6;
			}
			return *this;
		}

		GSNSRoleInfo& operator = (const GSNSRoleInfo &rhs)
		{
			const GSNSRoleInfo *r = &rhs;
			if (r && r != this)
			{
				level = r->level;
				sub_level = r->sub_level;
				gender = r->gender;
				occupation = r->occupation;
				spouse = r->spouse;
				rolename = r->rolename;
				sectname = r->sectname;
				familyname = r->familyname;
				factionname = r->factionname;
				factiontitle = r->factiontitle;
				faction_level = r->faction_level;
				reserved1 = r->reserved1;
				reserved2 = r->reserved2;
				reserved3 = r->reserved3;
				reserved4 = r->reserved4;
				reserved5 = r->reserved5;
				reserved6 = r->reserved6;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << level;
			os << sub_level;
			os << gender;
			os << occupation;
			os << spouse;
			os << rolename;
			os << sectname;
			os << familyname;
			os << factionname;
			os << factiontitle;
			os << faction_level;
			os << reserved1;
			os << reserved2;
			os << reserved3;
			os << reserved4;
			os << reserved5;
			os << reserved6;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> level;
			os >> sub_level;
			os >> gender;
			os >> occupation;
			os >> spouse;
			os >> rolename;
			os >> sectname;
			os >> familyname;
			os >> factionname;
			os >> factiontitle;
			os >> faction_level;
			os >> reserved1;
			os >> reserved2;
			os >> reserved3;
			os >> reserved4;
			os >> reserved5;
			os >> reserved6;
			return os;
		}

	};
};
#endif
