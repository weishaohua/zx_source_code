#ifndef __GNET_TRANSACTIONID_RPCDATA
#define __GNET_TRANSACTIONID_RPCDATA

#include "rpcdefs.h"


namespace GNET
{
	class TransactionId : public GNET::Rpc::Data
	{
	public:
		unsigned int id;

	public:
		TransactionId (unsigned int l_id = 0)
			: id(l_id)
		{
		}

		TransactionId(const TransactionId &rhs)
			: id(rhs.id) { }

		Rpc::Data *Clone() const { return new TransactionId(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const TransactionId *r = dynamic_cast<const TransactionId *>(&rhs);
			if (r && r != this)
			{
				id = r->id;
			}
			return *this;
		}

		TransactionId& operator = (const TransactionId &rhs)
		{
			const TransactionId *r = &rhs;
			if (r && r != this)
			{
				id = r->id;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << id;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> id;
			return os;
		}

	};
};
#endif
