#ifndef __GNET_DBAUCTIONLISTARG_RPCDATA
#define __GNET_DBAUCTIONLISTARG_RPCDATA

#include "rpcdefs.h"


namespace GNET
{
	class DBAuctionListArg : public GNET::Rpc::Data
	{
	public:
		Octets handle;

	public:
		DBAuctionListArg (const Octets& l_handle = Octets())
			: handle(l_handle)
		{
		}

		DBAuctionListArg(const DBAuctionListArg &rhs)
			: handle(rhs.handle) { }

		Rpc::Data *Clone() const { return new DBAuctionListArg(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const DBAuctionListArg *r = dynamic_cast<const DBAuctionListArg *>(&rhs);
			if (r && r != this)
			{
				handle = r->handle;
			}
			return *this;
		}

		DBAuctionListArg& operator = (const DBAuctionListArg &rhs)
		{
			const DBAuctionListArg *r = &rhs;
			if (r && r != this)
			{
				handle = r->handle;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << handle;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> handle;
			return os;
		}

	};
};
#endif
