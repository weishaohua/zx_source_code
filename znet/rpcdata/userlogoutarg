#ifndef __GNET_USERLOGOUTARG_RPCDATA
#define __GNET_USERLOGOUTARG_RPCDATA

#include "rpcdefs.h"


namespace GNET
{
	class UserLogoutArg : public GNET::Rpc::Data
	{
	public:
		int userid;
		unsigned int localsid;

	public:
		UserLogoutArg (int l_userid = -1,unsigned int l_localsid = 0)
			: userid(l_userid),localsid(l_localsid)
		{
		}

		UserLogoutArg(const UserLogoutArg &rhs)
			: userid(rhs.userid),localsid(rhs.localsid) { }

		Rpc::Data *Clone() const { return new UserLogoutArg(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const UserLogoutArg *r = dynamic_cast<const UserLogoutArg *>(&rhs);
			if (r && r != this)
			{
				userid = r->userid;
				localsid = r->localsid;
			}
			return *this;
		}

		UserLogoutArg& operator = (const UserLogoutArg &rhs)
		{
			const UserLogoutArg *r = &rhs;
			if (r && r != this)
			{
				userid = r->userid;
				localsid = r->localsid;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << userid;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> userid;
			os >> localsid;
			return os;
		}

	};
};
#endif
